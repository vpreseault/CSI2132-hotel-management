DROP TABLE IF EXISTS Archives CASCADE;
DROP TABLE IF EXISTS Rentings CASCADE;
DROP TABLE IF EXISTS Bookings CASCADE;
DROP TABLE IF EXISTS Room_Has_Amenities CASCADE;
DROP TABLE IF EXISTS Amenities CASCADE;
DROP TABLE IF EXISTS Rooms CASCADE;
DROP TABLE IF EXISTS Employees CASCADE;
DROP TABLE IF EXISTS HotelEmails CASCADE;
DROP TABLE IF EXISTS HotelPhones CASCADE;
DROP TABLE IF EXISTS ChainEmails CASCADE;
DROP TABLE IF EXISTS ChainPhones CASCADE;
DROP TABLE IF EXISTS Hotels CASCADE;
DROP TABLE IF EXISTS HotelChains CASCADE;
DROP TABLE IF EXISTS Customers CASCADE;
DROP VIEW IF EXISTS RoomSearchView CASCADE;

/* Create tables without connecting the foreign keys */

-- HotelChain Table
CREATE TABLE HotelChains (
    chain_ID SERIAL PRIMARY KEY,
    chain_name VARCHAR(255) NOT NULL,
    central_office_address VARCHAR(255) NOT NULL, 
    number_of_hotels INT NOT NULL DEFAULT 0
);

-- Insert into HotelChain
INSERT INTO HotelChains (chain_name, central_office_address) VALUES
('Hilton', '456 King St, Toronto, ON'),
('Best Western', '789 Sparks St, Ottawa, ON'),
('Travelodge', '123 Crescent St, Montreal, QC'),
('Four Seasons', '321 Granville St, Vancouver, BC'),
('Fairmont', '100 Jasper Ave, Edmonton, AB');

-- Hotels Table
CREATE TABLE Hotels (
    hotel_ID SERIAL PRIMARY KEY,
    chain_ID INT NOT NULL,
    manager_ID INT UNIQUE,  
    hotel_name VARCHAR(255) NOT NULL,
    number_of_rooms INT NOT NULL DEFAULT 0,
    address VARCHAR(255) NOT NULL,
    category INT NOT NULL CHECK (category BETWEEN 1 AND 5)
);

CREATE OR REPLACE FUNCTION update_hotel_chain_count()
RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' THEN
        UPDATE HotelChains 
        SET number_of_hotels = number_of_hotels + 1
        WHERE chain_ID = NEW.chain_ID;
    ELSIF TG_OP = 'DELETE' THEN
        UPDATE HotelChains 
        SET number_of_hotels = number_of_hotels - 1
        WHERE chain_ID = OLD.chain_ID;
    END IF;
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_hotel_count
    AFTER INSERT OR DELETE ON Hotels
    FOR EACH ROW
    EXECUTE FUNCTION update_hotel_chain_count();

-- Insert into Hotel
INSERT INTO Hotels (chain_ID, manager_ID, hotel_name, address, category) VALUES
(1, 1, 'Hilton Grand Boston', '100 Boylston St, Boston, MA', 3),
(1, 4, 'Hilton Express Montreal', '103 Sherbrooke St, Montreal, QC', 4),
(1, 7, 'Hilton Express Edmonton', '106 Jasper Ave, Edmonton, AB', 4),
(1, 10, 'Hilton Elite Edmonton', '109 Jasper Ave, Edmonton, AB', 2),
(1, 13, 'Hilton Grand San Francisco', '112 Market St, San Francisco, CA', 1),
(1, 16, 'Hilton Express Vancouver', '115 Georgia St, Vancouver, BC', 4),
(1, 19, 'Hilton Central Seattle', '118 Pine St, Seattle, WA', 3),
(1, 22, 'Hilton Central New York', '121 Broadway, New York, NY', 3),
(2, 25, 'Best Western Downtown Ottawa', '124 Elgin St, Ottawa, ON', 4),
(2, 28, 'Best Western Select Seattle', '127 Pine St, Seattle, WA', 1),
(2, 31, 'Best Western Inn Miami', '130 Ocean Dr, Miami, FL', 4),
(2, 34, 'Best Western Plus Toronto', '133 King St, Toronto, ON', 2),
(2, 37, 'Best Western Select Vancouver', '136 Georgia St, Vancouver, BC', 3),
(2, 40, 'Best Western Plus Chicago', '139 Michigan Ave, Chicago, IL', 3),
(2, 43, 'Best Western Select Las Vegas', '142 Las Vegas Blvd, Las Vegas, NV', 5),
(2, 46, 'Best Western Plus Toronto', '145 King St, Toronto, ON', 1),
(3, 49, 'Travelodge Classic Calgary', '148 17th Ave, Calgary, AB', 5),
(3, 52, 'Travelodge Suites Edmonton', '151 Jasper Ave, Edmonton, AB', 5),
(3, 55, 'Travelodge Suites Montreal', '154 Sherbrooke St, Montreal, QC', 4),
(3, 58, 'Travelodge Central Halifax', '157 Barrington St, Halifax, NS', 5),
(3, 61, 'Travelodge Classic Ottawa', '160 Elgin St, Ottawa, ON', 4),
(3, 64, 'Travelodge Central Edmonton', '163 Jasper Ave, Edmonton, AB', 4),
(3, 67, 'Travelodge Classic New York', '166 Broadway, New York, NY', 4),
(3, 70, 'Travelodge Classic Calgary', '169 17th Ave, Calgary, AB', 3),
(4, 73, 'Four Seasons Elite San Francisco', '172 Market St, San Francisco, CA', 5),
(4, 76, 'Four Seasons East Edmonton', '175 Jasper Ave, Edmonton, AB', 2),
(4, 79, 'Four Seasons East Miami', '178 Ocean Dr, Miami, FL', 3),
(4, 82, 'Four Seasons Cityview Ottawa', '181 Elgin St, Ottawa, ON', 5),
(4, 85, 'Four Seasons West Vancouver', '184 Georgia St, Vancouver, BC', 1),
(4, 88, 'Four Seasons Elite Las Vegas', '187 Las Vegas Blvd, Las Vegas, NV', 3),
(4, 91, 'Four Seasons Grand Las Vegas', '101 Las Vegas Blvd, Las Vegas, NV', 3),
(4, 94, 'Four Seasons Cityview Edmonton', '104 Jasper Ave, Edmonton, AB', 5),
(5, 97, 'Fairmont Bayview Boston', '107 Boylston St, Boston, MA', 4),
(5, 100, 'Fairmont Plus Vancouver', '110 Georgia St, Vancouver, BC', 5),
(5, 103, 'Fairmont Signature Seattle', '113 Pine St, Seattle, WA', 4),
(5, 106, 'Fairmont Plus Chicago', '116 Michigan Ave, Chicago, IL', 5),
(5, 109, 'Fairmont Plus Miami', '119 Ocean Dr, Miami, FL', 3),
(5, 112, 'Fairmont Bayview Montreal', '122 Sherbrooke St, Montreal, QC', 3),
(5, 115, 'Fairmont Luxe Chicago', '125 Michigan Ave, Chicago, IL', 5),
(5, 118, 'Fairmont Bayview Miami', '128 Ocean Dr, Miami, FL', 5);

-- Phone and Emails for hotel and hotelchain
CREATE TABLE ChainPhones (
    chain_ID INT NOT NULL,
    c_phone VARCHAR(20) UNIQUE NOT NULL CHECK (c_phone ~ '^[0-9-]+$'),
    PRIMARY KEY (chain_ID, c_phone)
);

-- Insert into ChainPhone
INSERT INTO ChainPhones (chain_ID, c_phone) VALUES
(1, '416-555-1000'),
(2, '613-555-2000'),
(3, '514-555-3000'),
(4, '604-555-4000'),
(5, '780-555-5000');

CREATE TABLE ChainEmails (
    chain_ID INT NOT NULL,
    c_email VARCHAR(255) UNIQUE NOT NULL CHECK (c_email ~* '^[A-Za-z0-9._+%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$'),
    PRIMARY KEY (chain_ID, c_email)
);

-- Insert into ChainEmail
INSERT INTO ChainEmails (chain_ID, c_email) VALUES
(1, 'info@hilton.ca'),
(2, 'contact@bestwestern.ca'),
(3, 'support@travelodge.ca'),
(4, 'hello@fourseasons.ca'),
(5, 'connect@fairmont.ca');

CREATE TABLE HotelPhones (
    hotel_ID INT NOT NULL,
    h_phone VARCHAR(20) UNIQUE NOT NULL CHECK (h_phone ~ '^[0-9-]+$'),
    PRIMARY KEY (hotel_ID, h_phone)
);

-- Insert into HotelPhone
INSERT INTO HotelPhones (hotel_ID, h_phone) VALUES
(1, '800-555-1000'),
(2, '800-555-1001'),
(3, '800-555-1002'),
(4, '800-555-1003'),
(5, '800-555-1004'),
(6, '800-555-1005'),
(7, '800-555-1006'),
(8, '800-555-1007'),
(9, '800-555-1008'),
(10, '800-555-1009'),
(11, '800-555-1010'),
(12, '800-555-1011'),
(13, '800-555-1012'),
(14, '800-555-1013'),
(15, '800-555-1014'),
(16, '800-555-1015'),
(17, '800-555-1016'),
(18, '800-555-1017'),
(19, '800-555-1018'),
(20, '800-555-1019'),
(21, '800-555-1020'),
(22, '800-555-1021'),
(23, '800-555-1022'),
(24, '800-555-1023'),
(25, '800-555-1024'),
(26, '800-555-1025'),
(27, '800-555-1026'),
(28, '800-555-1027'),
(29, '800-555-1028'),
(30, '800-555-1029'),
(31, '800-555-1030'),
(32, '800-555-1031'),
(33, '800-555-1032'),
(34, '800-555-1033'),
(35, '800-555-1034'),
(36, '800-555-1035'),
(37, '800-555-1036'),
(38, '800-555-1037'),
(39, '800-555-1038'),
(40, '800-555-1039');

CREATE TABLE HotelEmails (
    hotel_ID INT NOT NULL,
    h_email VARCHAR(255) UNIQUE NOT NULL CHECK (h_email ~* '^[A-Za-z0-9._+%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$'),
    PRIMARY KEY (hotel_ID, h_email)
);

-- Insert into HotelEmail
INSERT INTO HotelEmails (hotel_ID, h_email) VALUES
(1, 'hotel1@example.com'),
(2, 'hotel2@example.com'),
(3, 'hotel3@example.com'),
(4, 'hotel4@example.com'),
(5, 'hotel5@example.com'),
(6, 'hotel6@example.com'),
(7, 'hotel7@example.com'),
(8, 'hotel8@example.com'),
(9, 'hotel9@example.com'),
(10, 'hotel10@example.com'),
(11, 'hotel11@example.com'),
(12, 'hotel12@example.com'),
(13, 'hotel13@example.com'),
(14, 'hotel14@example.com'),
(15, 'hotel15@example.com'),
(16, 'hotel16@example.com'),
(17, 'hotel17@example.com'),
(18, 'hotel18@example.com'),
(19, 'hotel19@example.com'),
(20, 'hotel20@example.com'),
(21, 'hotel21@example.com'),
(22, 'hotel22@example.com'),
(23, 'hotel23@example.com'),
(24, 'hotel24@example.com'),
(25, 'hotel25@example.com'),
(26, 'hotel26@example.com'),
(27, 'hotel27@example.com'),
(28, 'hotel28@example.com'),
(29, 'hotel29@example.com'),
(30, 'hotel30@example.com'),
(31, 'hotel31@example.com'),
(32, 'hotel32@example.com'),
(33, 'hotel33@example.com'),
(34, 'hotel34@example.com'),
(35, 'hotel35@example.com'),
(36, 'hotel36@example.com'),
(37, 'hotel37@example.com'),
(38, 'hotel38@example.com'),
(39, 'hotel39@example.com'),
(40, 'hotel40@example.com');

-- Employees Table
CREATE TABLE Employees (
    employee_ID SERIAL PRIMARY KEY,
    hotel_ID INT NOT NULL,
    full_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL,
    ID_type VARCHAR(50) NOT NULL CHECK (ID_type IN ('SSN', 'SIN')),
    ID_number VARCHAR(255) UNIQUE NOT NULL,
    role VARCHAR(50) NOT NULL CHECK (role IN ('Manager', 'Employee'))
);

-- Insert into Employee
INSERT INTO Employees (hotel_ID, full_name, address, ID_type, ID_number, role) VALUES
(1, 'Brandi Stewart', '947 Main St, Boston, MA', 'SIN', '328-48-9432', 'Manager'),
(1, 'Gail Morrow', '717 Main St, Boston, MA', 'SSN', '119-72-7960', 'Employee'),
(1, 'Jeremy Patel', '882 Main St, Boston, MA', 'SIN', '777-64-7061', 'Employee'),
(2, 'Bryan Smith', '932 Main St, Montreal', 'SSN', '720-54-9106', 'Manager'),
(2, 'Lawrence Chang', '665 Main St, Montreal, QC', 'SIN', '246-78-2837', 'Employee'),
(2, 'Robert Bailey', '628 Main St, Montreal, QC', 'SSN', '639-90-4450', 'Employee'),
(2, 'Brenda Acevedo', '748 Main St, Montreal, QC', 'SSN', '602-14-8901', 'Employee'),
(3, 'Allison Alvarez', '269 Main St, Edmonton, AB', 'SSN', '377-91-4551', 'Manager'),
(3, 'Jacqueline Dominguez', '476 Main St, Edmonton, AB', 'SIN', '427-73-9608', 'Employee'),
(3, 'Amanda Carter', '617 Main St, Edmonton, AB', 'SSN', '719-25-5407', 'Employee'),
(3, 'Tim Webb', '845 Main St, Edmonton, AB', 'SIN', '556-48-1681', 'Employee'),
(3, 'David Mayo', '585 Main St, Edmonton, AB', 'SIN', '838-93-3834', 'Employee'),
(4, 'Donald Keith', '609 Main St, Edmonton, AB', 'SIN', '448-77-7712', 'Manager'),
(4, 'Christopher Jones', '354 Main St, Edmonton, AB', 'SSN', '340-72-5008', 'Employee'),
(4, 'Julie Ellis', '797 Main St, Edmonton, AB', 'SIN', '535-68-5415', 'Employee'),
(5, 'Laura Wells', '158 Main St, San Francisco, CA', 'SIN', '948-91-2430', 'Manager'),
(5, 'Andrew Sanchez', '983 Main St, San Francisco, CA', 'SSN', '626-73-5934', 'Employee'),
(5, 'Steven Woods', '916 Main St, San Francisco, CA', 'SIN', '224-72-3772', 'Employee'),
(5, 'Leroy Lane', '908 Main St, San Francisco, CA', 'SSN', '370-28-2156', 'Employee'),
(6, 'Joe Cook', '747 Main St, Vancouver, BC', 'SSN', '318-46-7101', 'Manager'),
(6, 'Lisa Smith', '916 Main St, Vancouver, BC', 'SIN', '704-71-6505', 'Employee'),
(6, 'Maria King', '225 Main St, Vancouver, BC', 'SSN', '499-49-8204', 'Employee'),
(6, 'Cynthia Lindsey', '630 Main St, Vancouver, BC', 'SIN', '787-35-8371', 'Employee'),
(6, 'Beverly Sexton', '575 Main St, Vancouver, BC', 'SSN', '913-15-6044', 'Employee'),
(7, 'Kathy Phillips', '248 Main St, Seattle, WA', 'SIN', '682-49-4015', 'Manager'),
(7, 'Brandon Moody', '666 Main St, Seattle, WA', 'SIN', '998-64-1623', 'Employee'),
(7, 'Jimmy Bailey', '231 Main St, Seattle, WA', 'SIN', '389-13-4240', 'Employee'),
(8, 'Donald Jordan', '192 Main St, New York, NY', 'SSN', '480-61-4341', 'Manager'),
(8, 'Carlos Smith', '596 Main St, New York, NY', 'SIN', '687-49-4528', 'Employee'),
(8, 'Doris Wright', '552 Main St, New York, NY', 'SSN', '111-53-9921', 'Employee'),
(8, 'Gregory Roberts', '693 Main St, New York, NY', 'SSN', '177-49-9809', 'Employee'),
(9, 'Cheryl Smith', '333 Main St, Ottawa, ON', 'SSN', '643-40-4033', 'Manager'),
(9, 'Emily Reyes', '566 Main St, Ottawa, ON', 'SIN', '933-91-1972', 'Employee'),
(9, 'Angelica Butler', '901 Main St, Ottawa, ON', 'SIN', '501-64-1642', 'Employee'),
(9, 'Nicole Williams', '782 Main St, Ottawa, ON', 'SSN', '708-82-1570', 'Employee'),
(9, 'Phillip Sanders', '786 Main St, Ottawa, ON', 'SIN', '793-13-4560', 'Employee'),
(10, 'David Ruiz', '967 Main St, Seattle, WA', 'SSN', '822-19-9585', 'Manager'),
(10, 'Laura Gray', '637 Main St, Seattle, WA', 'SSN', '587-86-6932', 'Employee'),
(10, 'Michael Peterson', '276 Main St, Seattle, WA', 'SIN', '869-68-4566', 'Employee'),
(11, 'Margaret Brewer', '202 Main St, Miami', 'SSN', '715-16-7678', 'Manager'),
(11, 'Mary Gordon', '823 Main St, Miami', 'SSN', '162-83-7064', 'Employee'),
(11, 'Michelle Eaton', '280 Main St, Miami', 'SIN', '233-70-8264', 'Employee'),
(11, 'Andre Chen', '808 Main St, Miami', 'SIN', '574-32-6243', 'Employee'),
(12, 'Donald Michael', '789 Main St, Toronto', 'SIN', '889-76-3596', 'Manager'),
(12, 'Mark Hester', '436 Main St, Toronto', 'SIN', '242-13-4761', 'Employee'),
(12, 'Steve Arnold', '658 Main St, Toronto', 'SSN', '153-40-8261', 'Employee'),
(12, 'Audrey Pope', '650 Main St, Toronto', 'SSN', '960-59-9359', 'Employee'),
(12, 'Caroline Barker', '488 Main St, Toronto', 'SIN', '269-84-6438', 'Employee'),
(13, 'Brianna Rodriguez', '154 Main St, Vancouver, BC', 'SSN', '528-96-7254', 'Manager'),
(13, 'Jillian Daniels', '817 Main St, Vancouver, BC', 'SSN', '167-66-6776', 'Employee'),
(13, 'Stephen Best', '537 Main St, Vancouver, BC', 'SSN', '897-67-6838', 'Employee'),
(14, 'Sarah Nguyen', '713 Main St, Chicago, IL', 'SIN', '602-87-9164', 'Manager'),
(14, 'Tammy Schmitt', '824 Main St, Chicago, IL', 'SIN', '812-39-6402', 'Employee'),
(14, 'Edwin Brown', '648 Main St, Chicago, IL', 'SIN', '206-24-7424', 'Employee'),
(14, 'Meredith Murphy', '390 Main St, Chicago, IL', 'SIN', '888-19-5400', 'Employee'),
(15, 'Ashley Molina', '962 Main St, Las Vegas, NV', 'SIN', '824-23-3280', 'Manager'),
(15, 'Dawn Flynn', '851 Main St, Las Vegas, NV', 'SIN', '870-44-5181', 'Employee'),
(15, 'Carrie Sampson', '138 Main St, Las Vegas, NV', 'SSN', '725-87-5108', 'Employee'),
(15, 'Stephen Harris', '337 Main St, Las Vegas, NV', 'SSN', '356-23-2988', 'Employee'),
(15, 'Diana Fletcher', '433 Main St, Las Vegas, NV', 'SSN', '380-40-2380', 'Employee'),
(16, 'Jason Young DDS', '770 Main St, Toronto', 'SIN', '120-62-1046', 'Manager'),
(16, 'Latasha Harrison', '810 Main St, Toronto', 'SSN', '849-54-3016', 'Employee'),
(16, 'Jessica Harmon', '726 Main St, Toronto', 'SSN', '905-81-3215', 'Employee'),
(17, 'Cindy Warner', '945 Main St, Calgary, AB', 'SSN', '961-85-4265', 'Manager'),
(17, 'Jessica Anderson', '384 Main St, Calgary, AB', 'SSN', '259-76-3780', 'Employee'),
(17, 'Ashley Garcia', '761 Main St, Calgary, AB', 'SSN', '749-51-8308', 'Employee'),
(17, 'Emily Bailey', '906 Main St, Calgary, AB', 'SIN', '924-27-9907', 'Employee'),
(18, 'Todd Cervantes', '155 Main St, Edmonton, AB', 'SSN', '781-68-7096', 'Manager'),
(18, 'Nicole Cruz', '477 Main St, Edmonton, AB', 'SIN', '728-97-7664', 'Employee'),
(18, 'Ms. Ashlee Morris', '694 Main St, Edmonton, AB', 'SSN', '215-84-8422', 'Employee'),
(18, 'Tiffany Green', '812 Main St, Edmonton, AB', 'SIN', '570-50-7207', 'Employee'),
(18, 'Katie Clements', '476 Main St, Edmonton, AB', 'SIN', '864-22-1598', 'Employee'),
(19, 'Grant Thompson', '808 Main St, Montreal, QC', 'SSN', '816-49-9190', 'Manager'),
(19, 'Krystal York', '921 Main St, Montreal, QC', 'SSN', '616-65-4288', 'Employee'),
(19, 'Amanda Williams', '636 Main St, Montreal, QC', 'SIN', '859-52-6230', 'Employee'),
(20, 'Joseph Parsons', '108 Main St, Halifax, NS', 'SSN', '764-71-4617', 'Manager'),
(20, 'Jennifer Levy', '867 Main St, Halifax, NS', 'SSN', '531-40-7712', 'Employee'),
(20, 'Jason Adams', '684 Main St, Halifax, NS', 'SSN', '780-27-2697', 'Employee'),
(20, 'Joann Davis', '821 Main St, Halifax, NS', 'SIN', '753-94-7873', 'Employee'),
(21, 'Scott Valenzuela', '704 Main St, Ottawa, ON', 'SIN', '974-60-8571', 'Manager'),
(21, 'Matthew Richard', '787 Main St, Ottawa, ON', 'SIN', '428-88-6167', 'Employee'),
(21, 'Melissa Neal', '367 Main St, Ottawa, ON', 'SIN', '527-88-3162', 'Employee'),
(21, 'Matthew Gonzalez', '702 Main St, Ottawa, ON', 'SIN', '309-33-5424', 'Employee'),
(21, 'Ana Smith', '475 Main St, Ottawa, ON', 'SIN', '175-18-7605', 'Employee'),
(22, 'David Reyes', '329 Main St, Edmonton, AB', 'SIN', '896-26-4860', 'Manager'),
(22, 'Robert Ritter', '900 Main St, Edmonton, AB', 'SIN', '209-45-2092', 'Employee'),
(22, 'Teresa Livingston', '878 Main St, Edmonton, AB', 'SIN', '597-15-4254', 'Employee'),
(23, 'David Kane', '672 Main St, New York, NY', 'SIN', '894-99-2475', 'Manager'),
(23, 'Sara Ruiz', '855 Main St, New York, NY', 'SSN', '442-19-7662', 'Employee'),
(23, 'Jessica Phelps', '611 Main St, New York, NY', 'SIN', '283-45-1373', 'Employee'),
(23, 'Patricia Rivera', '378 Main St, New York, NY', 'SIN', '752-39-1982', 'Employee'),
(24, 'Renee Lane MD', '937 Main St, Calgary, AB', 'SIN', '290-47-9440', 'Manager'),
(24, 'Jeffery Griffith', '749 Main St, Calgary, AB', 'SSN', '940-34-6946', 'Employee'),
(24, 'Jason Hill', '846 Main St, Calgary, AB', 'SIN', '982-55-3229', 'Employee'),
(24, 'Stephanie Cooke', '919 Main St, Calgary, AB', 'SSN', '936-49-8364', 'Employee'),
(24, 'Laura Espinoza', '204 Main St, Calgary, AB', 'SIN', '618-61-4739', 'Employee'),
(25, 'Denise Goodman', '874 Main St, San Francisco, CA', 'SSN', '109-36-4451', 'Manager'),
(25, 'Lisa Patton', '586 Main St, San Francisco, CA', 'SIN', '861-46-8445', 'Employee'),
(25, 'Brittney Snyder', '985 Main St, San Francisco, CA', 'SSN', '462-74-7171', 'Employee'),
(26, 'Marilyn Ochoa', '229 Main St, Edmonton, AB', 'SIN', '670-75-6956', 'Manager'),
(26, 'Brian Flores', '613 Main St, Edmonton, AB', 'SSN', '438-75-6489', 'Employee'),
(26, 'Laura Cain', '801 Main St, Edmonton, AB', 'SIN', '513-25-1130', 'Employee'),
(26, 'Scott Pacheco', '966 Main St, Edmonton, AB', 'SSN', '908-10-6668', 'Employee'),
(27, 'David Wall', '541 Main St, Miami, FL', 'SSN', '194-92-3039', 'Manager'),
(27, 'Richard Garner', '446 Main St, Miami, FL', 'SIN', '870-80-5473', 'Employee'),
(27, 'Brandon Mcdonald', '735 Main St, Miami, FL', 'SIN', '328-76-5472', 'Employee'),
(27, 'Michael Campbell', '277 Main St, Miami, FL', 'SSN', '929-39-3180', 'Employee'),
(27, 'David Smith', '575 Main St, Miami, FL', 'SIN', '433-74-2053', 'Employee'),
(28, 'Mackenzie Lee', '999 Main St, Ottawa, ON', 'SSN', '617-24-7587', 'Manager'),
(28, 'Jorge Jones', '891 Main St, Ottawa, ON', 'SSN', '220-49-4127', 'Employee'),
(28, 'Debbie Cox', '140 Main St, Ottawa, ON', 'SIN', '123-49-3574', 'Employee'),
(29, 'Carolyn Hernandez', '923 Main St, Vancouver, BC', 'SSN', '213-66-5188', 'Manager'),
(29, 'Erica Fitzgerald', '857 Main St, Vancouver, BC', 'SSN', '119-34-8895', 'Employee'),
(29, 'Betty Santiago', '687 Main St, Vancouver, BC', 'SSN', '166-76-4109', 'Employee'),
(29, 'Thomas Good', '259 Main St, Vancouver, BC', 'SIN', '169-74-3574', 'Employee'),
(30, 'Robert Pearson', '422 Main St, Las Vegas, NV', 'SIN', '282-94-7073', 'Manager'),
(30, 'Michelle Henry', '130 Main St, Las Vegas, NV', 'SIN', '217-42-5243', 'Employee'),
(30, 'Stephanie Meyer', '137 Main St, Las Vegas, NV', 'SIN', '657-18-5420', 'Employee'),
(30, 'Cassandra Rogers', '576 Main St, Las Vegas, NV', 'SIN', '143-16-3482', 'Employee'),
(30, 'Vicki Sweeney', '739 Main St, Las Vegas, NV', 'SIN', '641-49-5722', 'Employee'),
(31, 'Stephen Rodriguez', '691 Main St, Las Vegas, NV', 'SSN', '635-68-4735', 'Manager'),
(31, 'Tyler Estrada', '775 Main St, Las Vegas, NV', 'SIN', '910-25-9718', 'Employee'),
(31, 'Kevin Brown', '824 Main St, Las Vegas, NV', 'SIN', '782-46-5428', 'Employee'),
(32, 'Jodi Shepherd', '672 Main St, Edmonton, AB', 'SSN', '498-35-9092', 'Manager'),
(32, 'Alicia Fitzpatrick', '946 Main St, Edmonton, AB', 'SSN', '616-23-9701', 'Employee'),
(32, 'Jacqueline Clark', '553 Main St, Edmonton, AB', 'SSN', '855-19-1269', 'Employee'),
(32, 'Laura Davis', '498 Main St, Edmonton, AB', 'SIN', '167-18-5470', 'Employee'),
(33, 'Robin Phillips', '240 Main St, Boston, MA', 'SSN', '877-51-6451', 'Manager'),
(33, 'Deborah Ortiz DDS', '210 Main St, Boston, MA', 'SIN', '178-97-6747', 'Employee'),
(33, 'Jonathan Lopez', '456 Main St, Boston, MA', 'SIN', '887-10-7994', 'Employee'),
(33, 'Adrian Bennett', '675 Main St, Boston, MA', 'SSN', '166-92-6260', 'Employee'),
(33, 'Susan Hess', '980 Main St, Boston, MA', 'SIN', '478-38-2299', 'Employee'),
(34, 'Sara Price', '118 Main St, Vancouver, BC', 'SIN', '828-87-2676', 'Manager'),
(34, 'Jade Crane', '679 Main St, Vancouver, BC', 'SIN', '482-48-4979', 'Employee'),
(34, 'Angel Howard', '148 Main St, Vancouver, BC', 'SSN', '872-23-1860', 'Employee'),
(35, 'Debbie Holmes', '621 Main St, Seattle, WA', 'SSN', '985-81-8268', 'Manager'),
(35, 'Emily Bridges', '201 Main St, Seattle, WA', 'SIN', '146-50-7531', 'Employee'),
(35, 'Edward Leon', '365 Main St, Seattle, WA', 'SIN', '754-70-3325', 'Employee'),
(35, 'Shannon Harrison', '411 Main St, Seattle, WA', 'SSN', '242-37-9957', 'Employee'),
(36, 'Mary Stewart', '165 Main St, Chicago, IL', 'SIN', '359-18-6730', 'Manager'),
(36, 'Kyle Johnson', '547 Main St, Chicago, IL', 'SIN', '896-74-1327', 'Employee'),
(36, 'Jesus Alvarez', '781 Main St, Chicago, IL', 'SSN', '909-71-1792', 'Employee'),
(36, 'David Lloyd', '521 Main St, Chicago, IL', 'SSN', '897-18-5932', 'Employee'),
(36, 'Travis Aguirre', '197 Main St, Chicago, IL', 'SIN', '404-40-9888', 'Employee'),
(37, 'William Nguyen', '459 Main St, Miami, FL', 'SSN', '550-98-1430', 'Manager'),
(37, 'Christopher Martinez', '688 Main St, Miami, FL', 'SSN', '598-86-7178', 'Employee'),
(37, 'Heidi Ross', '637 Main St, Miami, FL', 'SIN', '715-91-1236', 'Employee'),
(38, 'Mr. Gary Hoffman Jr.', '324 Main St, Montreal, QC', 'SIN', '801-76-4486', 'Manager'),
(38, 'Martin Bradford', '803 Main St, Montreal, QC', 'SSN', '389-78-4782', 'Employee'),
(38, 'Deborah Castillo', '853 Main St, Montreal, QC', 'SIN', '642-95-4174', 'Employee'),
(38, 'Sabrina Taylor', '340 Main St, Montreal, QC', 'SIN', '593-88-2520', 'Employee'),
(39, 'Michelle Ramos', '145 Main St, Chicago, IL', 'SSN', '174-78-8247', 'Manager'),
(39, 'Thomas Fisher', '573 Main St, Chicago, IL', 'SIN', '428-57-4145', 'Employee'),
(39, 'Danny Smith', '220 Main St, Chicago, IL', 'SIN', '602-96-9051', 'Employee'),
(39, 'Tonya Reed', '318 Main St, Chicago, IL', 'SSN', '200-39-6784', 'Employee'),
(39, 'Austin Martinez', '195 Main St, Chicago, IL', 'SIN', '285-91-8272', 'Employee'),
(40, 'Nathan Thomas', '659 Main St, Miami, FL', 'SIN', '259-28-7855', 'Manager'),
(40, 'Samantha Anderson', '175 Main St, Miami, FL', 'SSN', '615-28-7810', 'Employee'),
(40, 'Jonathan Rodriguez', '648 Main St, Miami, FL', 'SSN', '315-66-5406', 'Employee');

-- Customers Table
CREATE TABLE Customers (
    customer_ID SERIAL PRIMARY KEY,
    full_name VARCHAR(255) NOT NULL,
    ID_type VARCHAR(50) NOT NULL CHECK (ID_type IN ('SSN', 'SIN', 'Drivers License')),
    ID_number VARCHAR(255) UNIQUE NOT NULL,
    address VARCHAR(255) NOT NULL,
    registration_date VARCHAR(255) NOT NULL
);

-- Insert into Customers
INSERT INTO Customers (full_name, ID_type, ID_number, address, registration_date) VALUES
('Noah Rhodes', 'SIN', 'N42868828', '242 Main St, Halifax, NS', '2024-12-12'),
('Leslie Johnson', 'Drivers License', 'L23756669', '858 Main St, Boston, MA', '2024-02-06'),
('Jonathan Johnson', 'Drivers License', 'J21668732', '532 Main St, New York, NY', '2024-03-18'),
('Meredith Barnes', 'SSN', 'M13999315', '323 Main St, Ottawa, ON', '2024-06-23'),
('Rhonda Smith', 'SSN', 'R77827638', '127 Main St, New York, NY', '2024-11-08'),
('Jay Ramirez', 'Drivers License', 'J36687537', '765 Main St, Miami, FL', '2024-03-24'),
('Gabrielle Davis', 'Drivers License', 'G83140807', '325 Main St, Calgary, AB', '2024-02-07'),
('Gregory Baker', 'SIN', 'G89089901', '928 Main St, Vancouver, BC', '2024-01-17'),
('Kimberly Dudley', 'SSN', 'K31429110', '532 Main St, Miami, FL', '2024-05-27'),
('Edward Fuller', 'SIN', 'E47295260', '320 Main St, Montreal, QC', '2024-12-09'),
('Laura Bush', 'SIN', 'L23718431', '489 Main St, Ottawa, ON', '2024-01-18'),
('Patricia Galloway', 'SSN', 'P58181396', '452 Main St, San Francisco, CA', '2024-11-28'),
('Brian Ramirez', 'Drivers License', 'B45503389', '144 Main St, Las Vegas, NV', '2024-09-03'),
('Carla Kelly', 'Drivers License', 'C71662963', '227 Main St, Seattle, WA', '2024-09-17'),
('Timothy Wong', 'SIN', 'T20576383', '400 Main St, Seattle', '2024-08-24'),
('Kimberly Sanchez', 'Drivers License', 'K93016315', '470 Main St, San Francisco, CA', '2024-06-28'),
('William Bowman', 'Drivers License', 'W35808537', '171 Main St, Miami, FL', '2024-08-04'),
('Frederick Tate', 'SSN', 'F98753260', '891 Main St, Halifax, NS', '2024-01-22'),
('Andrew Stewart', 'SIN', 'A20709497', '338 Main St, San Francisco, CA', '2024-04-13'),
('Thomas Bradley', 'SSN', 'T61019678', '564 Main St, Vancouver, BC', '2024-10-05');

-- Rooms Table
CREATE TABLE Rooms (
    room_ID SERIAL PRIMARY KEY,
    hotel_ID INT NOT NULL,
    room_number VARCHAR(10) NOT NULL,
    capacity INT NOT NULL CHECK (capacity > 0),
    price DECIMAL(10,2) NOT NULL CHECK (price >= 0),
    view_type VARCHAR(20) CHECK (view_type IN ('Mountain', 'Sea')),
    extendable BOOLEAN NOT NULL,
    damaged BOOLEAN NOT NULL
);

CREATE OR REPLACE FUNCTION update_hotel_room_count()
RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' THEN
        UPDATE Hotels 
        SET number_of_rooms = number_of_rooms + 1
        WHERE hotel_ID = NEW.hotel_ID;
    ELSIF TG_OP = 'DELETE' THEN
        UPDATE Hotels 
        SET number_of_rooms = number_of_rooms - 1
        WHERE hotel_ID = OLD.hotel_ID;
    END IF;
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_room_count
    AFTER INSERT OR DELETE ON Rooms
    FOR EACH ROW
    EXECUTE FUNCTION update_hotel_room_count();

-- Insert into Rooms
INSERT INTO Rooms (hotel_ID, room_number, capacity, price, view_type, extendable, damaged) VALUES
(1, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(1, '101', 4, 150.00, 'Mountain', FALSE, FALSE),
(1, '102', 7, 225.00, 'Mountain', TRUE, FALSE),
(1, '103', 5, 175.00, 'Mountain', FALSE, TRUE),
(1, '104', 3, 125.00, 'Sea', FALSE, FALSE),
(2, '100', 10, 300.00, 'Sea', FALSE, FALSE),
(2, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(2, '102', 4, 150.00, 'Mountain', TRUE, FALSE),
(2, '103', 8, 250.00, 'Mountain', FALSE, TRUE),
(2, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(3, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(3, '101', 2, 100.00, 'Mountain', FALSE, FALSE),
(3, '102', 5, 175.00, 'Sea', TRUE, FALSE),
(3, '103', 7, 225.00, 'Mountain', FALSE, TRUE),
(3, '104', 6, 200.00, 'Sea', FALSE, FALSE),
(4, '100', 5, 175.00, 'Sea', FALSE, FALSE),
(4, '101', 7, 225.00, 'Mountain', FALSE, FALSE),
(4, '102', 5, 175.00, 'Mountain', TRUE, FALSE),
(4, '103', 8, 250.00, 'Mountain', FALSE, TRUE),
(4, '104', 4, 150.00, 'Mountain', FALSE, FALSE),
(5, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(5, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(5, '102', 10, 300.00, 'Mountain', TRUE, FALSE),
(5, '103', 8, 250.00, 'Mountain', FALSE, TRUE),
(5, '104', 7, 225.00, 'Sea', FALSE, FALSE),
(6, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(6, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(6, '102', 9, 275.00, 'Sea', TRUE, FALSE),
(6, '103', 2, 100.00, 'Sea', FALSE, TRUE),
(6, '104', 4, 150.00, 'Sea', FALSE, FALSE),
(7, '100', 8, 250.00, 'Sea', FALSE, FALSE),
(7, '101', 3, 125.00, 'Mountain', FALSE, FALSE),
(7, '102', 8, 250.00, 'Mountain', TRUE, FALSE),
(7, '103', 9, 275.00, 'Mountain', FALSE, TRUE),
(7, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(8, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(8, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(8, '102', 6, 200.00, 'Mountain', TRUE, FALSE),
(8, '103', 3, 125.00, 'Mountain', FALSE, TRUE),
(8, '104', 8, 250.00, 'Sea', FALSE, FALSE),
(9, '100', 9, 275.00, 'Sea', FALSE, FALSE),
(9, '101', 2, 100.00, 'Mountain', FALSE, FALSE),
(9, '102', 6, 200.00, 'Sea', TRUE, FALSE),
(9, '103', 10, 300.00, 'Sea', FALSE, TRUE),
(9, '104', 6, 200.00, 'Sea', FALSE, FALSE),
(10, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(10, '101', 7, 225.00, 'Mountain', FALSE, FALSE),
(10, '102', 4, 150.00, 'Sea', TRUE, FALSE),
(10, '103', 7, 225.00, 'Mountain', FALSE, TRUE),
(10, '104', 2, 100.00, 'Sea', FALSE, FALSE),
(11, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(11, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(11, '102', 5, 175.00, 'Sea', TRUE, FALSE),
(11, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(11, '104', 3, 125.00, 'Mountain', FALSE, FALSE),
(12, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(12, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(12, '102', 4, 150.00, 'Sea', TRUE, FALSE),
(12, '103', 9, 275.00, 'Sea', FALSE, TRUE),
(12, '104', 6, 200.00, 'Mountain', FALSE, FALSE),
(13, '100', 5, 175.00, 'Sea', FALSE, FALSE),
(13, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(13, '102', 5, 175.00, 'Mountain', TRUE, FALSE),
(13, '103', 8, 250.00, 'Mountain', FALSE, TRUE),
(13, '104', 9, 275.00, 'Mountain', FALSE, FALSE),
(14, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(14, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(14, '102', 5, 175.00, 'Sea', TRUE, FALSE),
(14, '103', 7, 225.00, 'Sea', FALSE, TRUE),
(14, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(15, '100', 5, 175.00, 'Sea', FALSE, FALSE),
(15, '101', 2, 100.00, 'Mountain', FALSE, FALSE),
(15, '102', 3, 125.00, 'Sea', TRUE, FALSE),
(15, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(15, '104', 2, 100.00, 'Mountain', FALSE, FALSE),
(16, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(16, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(16, '102', 5, 175.00, 'Mountain', TRUE, FALSE),
(16, '103', 9, 275.00, 'Sea', FALSE, TRUE),
(16, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(17, '100', 9, 275.00, 'Sea', FALSE, FALSE),
(17, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(17, '102', 9, 275.00, 'Mountain', TRUE, FALSE),
(17, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(17, '104', 3, 125.00, 'Mountain', FALSE, FALSE),
(18, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(18, '101', 8, 250.00, 'Mountain', FALSE, FALSE),
(18, '102', 8, 250.00, 'Mountain', TRUE, FALSE),
(18, '103', 2, 100.00, 'Sea', FALSE, TRUE),
(18, '104', 2, 100.00, 'Mountain', FALSE, FALSE),
(19, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(19, '101', 3, 125.00, 'Mountain', FALSE, FALSE),
(19, '102', 5, 175.00, 'Sea', TRUE, FALSE),
(19, '103', 5, 175.00, 'Mountain', FALSE, TRUE),
(19, '104', 4, 150.00, 'Mountain', FALSE, FALSE),
(20, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(20, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(20, '102', 9, 275.00, 'Sea', TRUE, FALSE),
(20, '103', 3, 125.00, 'Mountain', FALSE, TRUE),
(20, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(21, '100', 2, 100.00, 'Sea', FALSE, FALSE),
(21, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(21, '102', 2, 100.00, 'Sea', TRUE, FALSE),
(21, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(21, '104', 8, 250.00, 'Mountain', FALSE, FALSE),
(22, '100', 9, 275.00, 'Sea', FALSE, FALSE),
(22, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(22, '102', 8, 250.00, 'Sea', TRUE, FALSE),
(22, '103', 4, 150.00, 'Mountain', FALSE, TRUE),
(22, '104', 2, 100.00, 'Mountain', FALSE, FALSE),
(23, '100', 6, 200.00, 'Sea', FALSE, FALSE),
(23, '101', 9, 275.00, 'Mountain', FALSE, FALSE),
(23, '102', 6, 200.00, 'Mountain', TRUE, FALSE),
(23, '103', 10, 300.00, 'Mountain', FALSE, TRUE),
(23, '104', 4, 150.00, 'Sea', FALSE, FALSE),
(24, '100', 6, 200.00, 'Sea', FALSE, FALSE),
(24, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(24, '102', 2, 100.00, 'Sea', TRUE, FALSE),
(24, '103', 7, 225.00, 'Sea', FALSE, TRUE),
(24, '104', 2, 100.00, 'Mountain', FALSE, FALSE),
(25, '100', 10, 300.00, 'Sea', FALSE, FALSE),
(25, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(25, '102', 4, 150.00, 'Sea', TRUE, FALSE),
(25, '103', 10, 300.00, 'Sea', FALSE, TRUE),
(25, '104', 4, 150.00, 'Sea', FALSE, FALSE),
(26, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(26, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(26, '102', 8, 250.00, 'Sea', TRUE, FALSE),
(26, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(26, '104', 3, 125.00, 'Mountain', TRUE, TRUE),
(27, '100', 10, 300.00, 'Sea', FALSE, FALSE),
(27, '101', 7, 225.00, 'Mountain', FALSE, FALSE),
(27, '102', 6, 200.00, 'Sea', TRUE, FALSE),
(27, '103', 7, 225.00, 'Sea', FALSE, TRUE),
(27, '104', 6, 200.00, 'Mountain', FALSE, FALSE),
(28, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(28, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(28, '102', 9, 275.00, 'Mountain', TRUE, FALSE),
(28, '103', 3, 125.00, 'Sea', FALSE, TRUE),
(28, '104', 9, 275.00, 'Sea', FALSE, FALSE),
(29, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(29, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(29, '102', 5, 175.00, 'Mountain', TRUE, FALSE),
(29, '103', 4, 150.00, 'Mountain', FALSE, TRUE),
(29, '104', 3, 125.00, 'Sea', FALSE, FALSE),
(30, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(30, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(30, '102', 4, 150.00, 'Mountain', TRUE, FALSE),
(30, '103', 10, 300.00, 'Mountain', FALSE, TRUE),
(30, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(31, '100', 10, 300.00, 'Sea', FALSE, FALSE),
(31, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(31, '102', 3, 125.00, 'Sea', TRUE, FALSE),
(31, '103', 6, 200.00, 'Sea', FALSE, TRUE),
(31, '104', 3, 125.00, 'Sea', FALSE, FALSE),
(32, '100', 6, 200.00, 'Sea', FALSE, FALSE),
(32, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(32, '102', 5, 175.00, 'Mountain', TRUE, FALSE),
(32, '103', 5, 175.00, 'Mountain', FALSE, TRUE),
(32, '104', 10, 300.00, 'Mountain', FALSE, FALSE),
(33, '100', 6, 200.00, 'Sea', FALSE, FALSE),
(33, '101', 2, 100.00, 'Mountain', FALSE, FALSE),
(33, '102', 3, 125.00, 'Mountain', TRUE, FALSE),
(33, '103', 6, 200.00, 'Sea', FALSE, TRUE),
(33, '104', 2, 100.00, 'Mountain', FALSE, FALSE),
(34, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(34, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(34, '102', 4, 150.00, 'Mountain', TRUE, FALSE),
(34, '103', 10, 300.00, 'Mountain', FALSE, TRUE),
(34, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(35, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(35, '101', 3, 125.00, 'Mountain', FALSE, FALSE),
(35, '102', 4, 150.00, 'Sea', TRUE, FALSE),
(35, '103', 7, 225.00, 'Sea', FALSE, TRUE),
(35, '104', 8, 250.00, 'Sea', FALSE, FALSE),
(36, '100', 2, 100.00, 'Sea', FALSE, FALSE),
(36, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(36, '102', 7, 225.00, 'Sea', TRUE, FALSE),
(36, '103', 7, 225.00, 'Sea', FALSE, TRUE),
(36, '104', 5, 175.00, 'Sea', TRUE, TRUE),
(37, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(37, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(37, '102', 8, 250.00, 'Sea', TRUE, FALSE),
(37, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(37, '104', 4, 150.00, 'Mountain', FALSE, FALSE),
(38, '100', 2, 100.00, 'Sea', FALSE, FALSE),
(38, '101', 4, 150.00, 'Mountain', TRUE, TRUE),
(38, '102', 7, 225.00, 'Mountain', TRUE, FALSE),
(38, '103', 5, 175.00, 'Mountain', FALSE, TRUE),
(38, '104', 4, 150.00, 'Sea', FALSE, FALSE),
(39, '100', 8, 250.00, 'Sea', FALSE, FALSE),
(39, '101', 2, 100.00, 'Mountain', FALSE, FALSE),
(39, '102', 9, 275.00, 'Sea', TRUE, FALSE),
(39, '103', 5, 175.00, 'Mountain', FALSE, TRUE),
(39, '104', 7, 225.00, 'Mountain', TRUE, FALSE),
(40, '100', 5, 175.00, 'Sea', FALSE, FALSE),
(40, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(40, '102', 2, 100.00, 'Sea', TRUE, FALSE),
(40, '103', 8, 250.00, 'Mountain', FALSE, TRUE),
(40, '104', 6, 200.00, 'Sea', TRUE, TRUE);

-- Amenities Table
CREATE TABLE Amenities (
    amenity_ID SERIAL PRIMARY KEY,
    amenity_name VARCHAR(255) NOT NULL UNIQUE
);

-- Insert into Amenities
INSERT INTO Amenities (amenity_name) VALUES
('WiFi'),
('Air Conditioning'),
('Television'),
('Mini Fridge'),
('Room Service'),
('Gym Access'),
('Pool Access'),
('Spa Access'),
('Balcony'),
('Coffee Maker');

-- Room_Has_Amenities 
CREATE TABLE Room_Has_Amenities (
    room_ID INT NOT NULL,
    amenity_ID INT NOT NULL,
    PRIMARY KEY (room_ID, amenity_ID)
);

-- Insert into Room_Has_Amenities
INSERT INTO Room_Has_Amenities (room_ID, amenity_ID) VALUES
(1, 6),
(1, 9),
(2, 9),
(2, 6),
(2, 1),
(4, 3),
(4, 5),
(7, 7),
(7, 6),
(7, 9),
(7, 4),
(8, 9),
(8, 2),
(8, 7),
(8, 5),
(9, 5),
(11, 7),
(11, 1),
(11, 4),
(11, 3),
(11, 8),
(13, 6),
(13, 10),
(13, 2),
(13, 9),
(13, 3),
(14, 5),
(14, 7),
(14, 6),
(14, 4),
(15, 5),
(15, 9),
(15, 3),
(15, 2),
(15, 4),
(16, 7),
(16, 3),
(16, 5),
(16, 4),
(16, 8),
(18, 5),
(18, 4),
(19, 10),
(19, 6),
(19, 8),
(20, 8),
(20, 4),
(20, 10),
(21, 3),
(21, 2),
(21, 5),
(21, 8),
(21, 6),
(22, 10),
(22, 6),
(22, 2),
(22, 7),
(22, 8),
(23, 5),
(23, 4),
(23, 9),
(23, 2),
(23, 1),
(25, 8),
(26, 2),
(26, 8),
(26, 7),
(26, 6),
(27, 4),
(27, 7),
(27, 8),
(27, 10),
(28, 3),
(29, 1),
(29, 2),
(29, 7),
(29, 9),
(29, 8),
(30, 9),
(30, 8),
(30, 1),
(30, 5),
(30, 2),
(32, 3),
(32, 8),
(32, 6),
(33, 10),
(33, 9),
(33, 7),
(34, 8),
(34, 3),
(34, 10),
(34, 4),
(35, 4),
(35, 5),
(36, 8),
(36, 4),
(36, 5),
(36, 9),
(38, 5),
(38, 4),
(38, 10),
(38, 3),
(38, 7),
(39, 2),
(39, 3),
(39, 9),
(39, 10),
(40, 3),
(40, 4),
(40, 2),
(41, 7),
(41, 6),
(41, 8),
(42, 1),
(42, 4),
(42, 7),
(43, 10),
(43, 1),
(43, 7),
(44, 1),
(44, 6),
(44, 5),
(45, 7),
(45, 9),
(45, 4),
(46, 4),
(46, 5),
(46, 7),
(47, 1),
(47, 7),
(47, 6),
(48, 7),
(48, 3),
(48, 8),
(48, 2),
(48, 5),
(49, 1),
(49, 7),
(49, 10),
(49, 8),
(50, 7),
(50, 3),
(50, 8),
(50, 2),
(50, 1),
(51, 7),
(51, 6),
(52, 8),
(53, 6),
(53, 7),
(54, 7),
(54, 5),
(56, 1),
(56, 9),
(56, 10),
(57, 4),
(57, 2),
(58, 1),
(58, 10),
(58, 4),
(58, 2),
(58, 9),
(59, 3),
(59, 4),
(59, 10),
(59, 9),
(60, 2),
(60, 4),
(60, 8),
(60, 6),
(60, 3),
(61, 3),
(61, 2),
(62, 5),
(64, 1),
(64, 5),
(64, 7),
(64, 4),
(65, 4),
(65, 2),
(65, 10),
(65, 1),
(65, 6),
(66, 10),
(66, 2),
(67, 1),
(67, 6),
(67, 7),
(67, 9),
(68, 2),
(68, 9),
(69, 6),
(69, 1),
(69, 7),
(69, 8),
(69, 4),
(71, 6),
(71, 8),
(71, 3),
(72, 3),
(72, 9),
(72, 5),
(73, 9),
(73, 8),
(73, 10),
(73, 4),
(74, 10),
(74, 5),
(74, 6),
(74, 7),
(74, 2),
(76, 8),
(76, 4),
(77, 10),
(77, 7),
(77, 6),
(79, 6),
(79, 3),
(79, 8),
(80, 6),
(81, 6),
(81, 5),
(82, 5),
(82, 9),
(82, 1),
(82, 10),
(83, 2),
(84, 7),
(85, 9),
(85, 4),
(85, 8),
(86, 8),
(86, 10),
(86, 1),
(86, 9),
(86, 3),
(87, 7),
(88, 4),
(88, 5),
(88, 6),
(88, 10),
(88, 9),
(89, 6),
(89, 7),
(89, 10),
(89, 3),
(90, 8),
(90, 5),
(90, 9),
(90, 3),
(90, 2),
(92, 4),
(92, 6),
(92, 2),
(92, 9),
(92, 5),
(93, 3),
(93, 4),
(93, 9),
(93, 6),
(93, 8),
(94, 10),
(94, 9),
(95, 5),
(95, 2),
(95, 4),
(95, 3),
(96, 6),
(97, 5),
(99, 9),
(99, 3),
(99, 5),
(99, 1),
(99, 7),
(100, 5),
(100, 3),
(100, 8),
(100, 1),
(102, 5),
(102, 8),
(102, 9),
(102, 4),
(103, 3),
(103, 1),
(104, 8),
(104, 2),
(106, 8),
(106, 2),
(106, 1),
(107, 3),
(108, 5),
(108, 2),
(108, 4),
(108, 1),
(109, 7),
(109, 4),
(109, 10),
(109, 9),
(110, 5),
(110, 7),
(110, 10),
(111, 10),
(111, 1),
(111, 2),
(111, 7),
(112, 4),
(113, 2),
(113, 3),
(114, 3),
(115, 2),
(115, 3),
(115, 1),
(115, 4),
(116, 10),
(116, 8),
(116, 5),
(118, 5),
(119, 5),
(119, 8),
(119, 2),
(119, 6),
(119, 9),
(120, 10),
(120, 4),
(121, 2),
(121, 9),
(121, 4),
(122, 3),
(122, 5),
(122, 10),
(122, 1),
(122, 7),
(123, 5),
(124, 10),
(124, 5),
(124, 8),
(124, 1),
(125, 5),
(125, 7),
(125, 10),
(126, 9),
(126, 8),
(126, 10),
(126, 1),
(127, 1),
(127, 7),
(127, 6),
(127, 5),
(128, 1),
(128, 2),
(129, 10),
(130, 1),
(130, 5),
(130, 10),
(130, 7),
(131, 8),
(132, 8),
(132, 5),
(132, 3),
(132, 9),
(133, 8),
(133, 2),
(133, 10),
(134, 7),
(134, 6),
(135, 2),
(135, 3),
(136, 7),
(136, 8),
(137, 7),
(137, 9),
(139, 2),
(139, 6),
(139, 5),
(140, 2),
(140, 7),
(141, 1),
(141, 9),
(141, 8),
(141, 4),
(143, 9),
(144, 10),
(144, 8),
(145, 8),
(145, 1),
(145, 4),
(145, 3),
(145, 5),
(146, 5),
(147, 8),
(147, 2),
(147, 1),
(148, 10),
(148, 4),
(148, 3),
(148, 8),
(148, 5),
(150, 7),
(150, 2),
(150, 4),
(150, 10),
(152, 2),
(152, 3),
(152, 8),
(153, 5),
(153, 9),
(153, 10),
(153, 4),
(153, 7),
(154, 4),
(154, 8),
(154, 3),
(155, 4),
(155, 9),
(155, 3),
(157, 7),
(157, 6),
(158, 5),
(158, 1),
(158, 10),
(158, 6),
(159, 10),
(159, 8),
(160, 8),
(161, 8),
(161, 6),
(161, 9),
(161, 5),
(162, 7),
(162, 8),
(162, 6),
(162, 10),
(163, 4),
(164, 7),
(164, 4),
(164, 10),
(164, 1),
(165, 8),
(165, 7),
(166, 3),
(166, 8),
(166, 1),
(167, 9),
(168, 6),
(168, 2),
(168, 8),
(168, 1),
(169, 8),
(169, 1),
(169, 3),
(169, 4),
(170, 3),
(170, 2),
(170, 8),
(170, 7),
(170, 10),
(171, 10),
(171, 7),
(172, 2),
(172, 6),
(172, 7),
(172, 3),
(172, 9),
(173, 8),
(173, 9),
(173, 1),
(173, 5),
(173, 10),
(174, 5),
(175, 2),
(176, 2),
(176, 10),
(176, 8),
(177, 5),
(180, 1),
(180, 5),
(181, 6),
(181, 7),
(182, 4),
(183, 7),
(183, 3),
(183, 9),
(183, 2),
(185, 7),
(185, 4),
(185, 8),
(185, 5),
(186, 4),
(187, 5),
(187, 8),
(187, 10),
(188, 1),
(188, 8),
(188, 5),
(188, 6),
(188, 9),
(189, 2),
(190, 6),
(190, 5),
(190, 7),
(191, 5),
(191, 8),
(191, 10),
(191, 2),
(191, 4),
(192, 2),
(192, 4),
(192, 7),
(193, 6),
(193, 5),
(193, 9),
(193, 1),
(194, 7),
(194, 5),
(194, 1),
(194, 9),
(194, 6),
(195, 1),
(195, 8),
(195, 5),
(195, 7),
(195, 2),
(196, 6),
(196, 4),
(196, 9),
(196, 5),
(197, 3),
(197, 2),
(198, 1),
(198, 5),
(198, 8),
(198, 10),
(198, 9),
(199, 3),
(199, 2),
(200, 6),
(200, 7);

-- Bookings Table
CREATE TABLE Bookings (
    booking_ID SERIAL PRIMARY KEY,
    customer_ID INT NOT NULL,
    room_ID INT NOT NULL,
    booking_date DATE NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    total_price DECIMAL(10,2) NOT NULL CHECK (total_price >= 0),
    CHECK (booking_date <= start_Date),
    CHECK (start_Date < end_Date)
);

-- Insert into Bookings
INSERT INTO Bookings (customer_ID, room_ID, booking_date, start_date, end_date, total_price) VALUES
(6, 52, '2025-07-06', '2025-08-01', '2025-08-04', 600.0),
(12, 136, '2025-05-23', '2025-06-22', '2025-06-28', 900.0),
(6, 66, '2025-11-15', '2025-12-11', '2025-12-16', 875.0),
(11, 30, '2025-10-08', '2025-10-11', '2025-10-16', 1250.0),
(8, 174, '2025-08-04', '2025-09-01', '2025-09-06', 750.0),
(3, 102, '2025-11-27', '2025-12-06', '2025-12-08', 250.0),
(4, 117, '2025-09-04', '2025-09-26', '2025-09-30', 1200.0),
(19, 98, '2025-05-22', '2025-05-26', '2025-05-30', 1100.0),
(16, 7, '2025-06-13', '2025-07-12', '2025-07-18', 1500.0),
(20, 57, '2025-05-04', '2025-05-25', '2025-05-27', 600.0),
(10, 167, '2025-07-01', '2025-07-05', '2025-07-10', 1250.0),
(2, 10, '2025-10-20', '2025-11-05', '2025-11-09', 600.0),
(4, 61, '2025-10-22', '2025-10-27', '2025-11-02', 1050.0),
(15, 95, '2025-06-28', '2025-07-12', '2025-07-18', 900.0),
(14, 168, '2025-10-18', '2025-11-14', '2025-11-16', 500.0),
(20, 105, '2025-09-12', '2025-09-14', '2025-09-18', 1200.0),
(7, 114, '2025-11-05', '2025-11-13', '2025-11-18', 1125.0),
(4, 176, '2025-08-16', '2025-09-03', '2025-09-07', 800.0),
(2, 102, '2025-08-12', '2025-08-19', '2025-08-23', 500.0),
(15, 24, '2025-06-04', '2025-06-25', '2025-06-28', 750.0),
(2, 86, '2025-05-19', '2025-05-24', '2025-05-27', 675.0),
(3, 196, '2025-10-08', '2025-10-15', '2025-10-21', 900.0),
(8, 85, '2025-09-13', '2025-10-09', '2025-10-12', 375.0),
(9, 38, '2025-04-18', '2025-05-06', '2025-05-09', 600.0),
(6, 29, '2025-04-14', '2025-04-19', '2025-04-21', 200.0),
(12, 61, '2025-05-02', '2025-05-13', '2025-05-19', 1050.0),
(6, 68, '2025-05-25', '2025-05-30', '2025-06-01', 600.0),
(17, 30, '2025-11-14', '2025-11-30', '2025-12-02', 300.0),
(12, 132, '2025-05-29', '2025-06-02', '2025-06-08', 1200.0),
(17, 57, '2025-09-09', '2025-09-11', '2025-09-17', 1800.0),
(10, 118, '2025-11-16', '2025-11-18', '2025-11-20', 300.0),
(13, 110, '2025-04-09', '2025-04-25', '2025-04-27', 300.0),
(3, 21, '2025-08-08', '2025-08-28', '2025-09-01', 600.0),
(3, 33, '2025-08-07', '2025-08-27', '2025-08-31', 1000.0),
(11, 98, '2025-11-01', '2025-11-18', '2025-11-24', 1650.0),
(15, 130, '2025-09-15', '2025-09-29', '2025-10-05', 1200.0),
(4, 168, '2025-09-29', '2025-10-23', '2025-10-29', 1500.0),
(14, 116, '2025-06-23', '2025-07-07', '2025-07-10', 900.0),
(15, 103, '2025-10-08', '2025-11-01', '2025-11-06', 500.0),
(11, 110, '2025-03-14', '2025-04-05', '2025-04-09', 600.0),
(12, 40, '2025-05-12', '2025-05-15', '2025-05-20', 1250.0),
(3, 24, '2025-10-22', '2025-10-26', '2025-10-31', 1250.0),
(5, 143, '2025-06-24', '2025-07-13', '2025-07-15', 600.0),
(4, 106, '2025-11-07', '2025-12-05', '2025-12-09', 400.0),
(2, 74, '2025-08-01', '2025-08-11', '2025-08-17', 1050.0),
(4, 148, '2025-05-07', '2025-05-14', '2025-05-20', 900.0),
(16, 58, '2025-07-11', '2025-07-23', '2025-07-25', 300.0),
(4, 196, '2025-08-28', '2025-09-16', '2025-09-20', 600.0),
(14, 144, '2025-05-12', '2025-06-01', '2025-06-07', 900.0),
(20, 169, '2025-09-23', '2025-09-24', '2025-09-28', 400.0);

-- Rentings Table
CREATE TABLE Rentings (
    renting_ID SERIAL PRIMARY KEY,
    employee_ID INT NOT NULL,
    customer_ID INT NOT NULL,
    room_ID INT NOT NULL,
    booking_ID INT UNIQUE,
    check_in_date DATE NOT NULL,
    check_out_date DATE NOT NULL,
    payment BOOLEAN NOT NULL,
    total_price DECIMAL(10,2) NOT NULL CHECK (total_price >= 0),
    CHECK (check_in_date <= check_out_date)
);

-- Insert into Rentings
INSERT INTO Rentings (employee_ID, customer_ID, room_ID, booking_ID, check_in_date, check_out_date, payment, total_price) VALUES
(76, 1, 120, 10, '2025-06-09', '2025-06-12', TRUE, 450.0),
(115, 3, 113, NULL, '2025-11-23', '2025-11-28', TRUE, 1125.0),
(136, 4, 139, 12, '2025-06-02', '2025-06-07', TRUE, 1000.0),
(132, 6, 26, 13, '2025-08-04', '2025-08-08', TRUE, 600.0),
(24, 6, 106, NULL, '2025-10-07', '2025-10-10', TRUE, 450.0),
(96, 7, 69, NULL, '2025-05-14', '2025-05-19', TRUE, 1250.0),
(17, 11, 7, 16, '2025-04-27', '2025-05-03', TRUE, 1350.0),
(37, 12, 143, 20, '2025-05-19', '2025-05-25', TRUE, 1800.0),
(100, 13, 74, NULL, '2025-07-12', '2025-07-18', TRUE, 1050.0),
(47, 15, 49, NULL, '2025-06-18', '2025-06-23', TRUE, 1125.0),
(95, 17, 115, NULL, '2025-09-23', '2025-09-27', TRUE, 400.0),
(111, 18, 22, 24, '2025-08-10', '2025-08-15', TRUE, 500.0),
(140, 18, 54, NULL, '2025-04-09', '2025-04-15', TRUE, 1350.0),
(43, 19, 14, 26, '2025-06-29', '2025-07-05', TRUE, 1050.0),
(18, 20, 105, NULL, '2025-06-28', '2025-06-30', TRUE, 550.0);

-- Archives Table  
CREATE TABLE Archives (
    archive_ID SERIAL PRIMARY KEY,
    renting_ID INT,
    booking_ID INT,
    customer_ID INT,
    total_price DECIMAL(10,2) NOT NULL CHECK (total_price >= 0),
    booking_date DATE,
    check_in_date DATE NOT NULL,
    check_out_date DATE NOT NULL,
    archive_date DATE NOT NULL
);

-- Insert into Archives
INSERT INTO Archives (renting_ID, booking_ID, customer_ID, total_price, booking_date, check_in_date, check_out_date, archive_date) VALUES
(1, 10, 1, 300.0, '2024-07-11', '2024-07-16', '2024-07-18', '2024-07-27'),
(2, NULL, 2, 600.0, '2024-08-25', '2024-08-30', '2024-09-05', '2024-09-08'),
(3, 12, 2, 350.0, '2024-04-20', '2024-04-25', '2024-04-28', '2024-05-01'),
(NULL, NULL, 2, 700.0, '2024-11-17', '2024-11-22', '2024-11-29', '2024-12-09'),
(NULL, NULL, 2, 700.0, '2024-08-31', '2024-09-05', '2024-09-12', '2024-09-20'),
(NULL, NULL, 3, 400.0, '2024-03-13', '2024-03-18', '2024-03-21', '2024-03-30'),
(NULL, NULL, 7, 450.0, '2024-05-15', '2024-05-20', '2024-05-23', '2024-05-30'),
(NULL, NULL, 9, 800.0, '2024-03-29', '2024-04-03', '2024-04-10', '2024-04-18'),
(NULL, NULL, 12, 850.0, '2024-02-14', '2024-02-19', '2024-02-23', '2024-03-01'),
(NULL, NULL, 12, 200.0, '2024-09-08', '2024-09-13', '2024-09-19', '2024-09-25'),
(4, 13, 14, 250.0, '2024-06-08', '2024-06-13', '2024-06-17', '2024-06-21'),
(5, NULL, 14, 600.0, '2024-03-18', '2024-03-23', '2024-03-29', '2024-04-04'),
(6, NULL, 15, 650.0, '2024-09-28', '2024-10-03', '2024-10-06', '2024-10-08'),
(7, 16, 15, 300.0, '2024-04-26', '2024-05-01', '2024-05-03', '2024-05-08'),
(NULL, NULL, 17, 150.0, '2024-02-11', '2024-02-16', '2024-02-21', '2024-02-28'),
(NULL, NULL, 17, 200.0, '2024-04-01', '2024-04-06', '2024-04-11', '2024-04-17'),
(NULL, NULL, 18, 900.0, '2024-08-11', '2024-08-16', '2024-08-20', '2024-08-26'),
(NULL, NULL, 19, 950.0, '2024-08-11', '2024-08-16', '2024-08-23', '2024-08-31'),
(8, 20, 19, 1000.0, '2024-03-21', '2024-03-26', '2024-03-31', '2024-04-01'),
(9, NULL, 20, 300.0, '2024-01-22', '2024-01-27', '2024-01-30', '2024-02-05');

/* Alters tables to connect the foreign keys */

-- Hotel references HotelChains and Employee (Manager)
ALTER TABLE Hotels
    ADD FOREIGN KEY (chain_ID) REFERENCES HotelChains(chain_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (manager_ID) REFERENCES Employees(employee_ID) ON DELETE SET NULL;

-- ChainPhone references HotelChains 
ALTER TABLE ChainPhones
    ADD FOREIGN KEY (chain_ID) REFERENCES HotelChains(chain_ID) ON DELETE CASCADE;

-- ChainEmail references HotelChains 
ALTER TABLE ChainEmails
    ADD FOREIGN KEY (chain_ID) REFERENCES HotelChains(chain_ID) ON DELETE CASCADE;

-- HotelPhone references HotelChains 
ALTER TABLE HotelPhones
    ADD FOREIGN KEY (hotel_ID) REFERENCES Hotels(hotel_ID) ON DELETE CASCADE;

-- HotelEmail references HotelChains 
ALTER TABLE HotelEmails
    ADD FOREIGN KEY (hotel_ID) REFERENCES Hotels(hotel_ID) ON DELETE CASCADE;

-- Employee references Hotel
ALTER TABLE Employees
    ADD FOREIGN KEY (hotel_ID) REFERENCES Hotels(hotel_ID) ON DELETE CASCADE;

-- Room references Hotel
ALTER TABLE Rooms
    ADD FOREIGN KEY (hotel_ID) REFERENCES Hotels(hotel_ID) ON DELETE CASCADE;

-- Room_Has_Amenities references Room and Amenities
ALTER TABLE Room_Has_Amenities
    ADD FOREIGN KEY (room_ID) REFERENCES Rooms(room_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (amenity_ID) REFERENCES Amenities(amenity_ID) ON DELETE CASCADE;

-- Bookings references Customer and Room
ALTER TABLE Bookings
    ADD FOREIGN KEY (customer_ID) REFERENCES Customers(customer_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (room_ID) REFERENCES Rooms(room_ID) ON DELETE CASCADE;

-- Rentings references Employee, Customer, Room, and Bookings
ALTER TABLE Rentings
    ADD FOREIGN KEY (employee_ID) REFERENCES Employees(employee_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (customer_ID) REFERENCES Customers(customer_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (room_ID) REFERENCES Rooms(room_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (booking_ID) REFERENCES Bookings(booking_ID) ON DELETE SET NULL;

-- Archive references Rentings and Bookings
ALTER TABLE Archives
    ADD FOREIGN KEY (renting_ID) REFERENCES Rentings(renting_ID) ON DELETE SET NULL,
    ADD FOREIGN KEY (booking_ID) REFERENCES Bookings(booking_ID) ON DELETE SET NULL,
    ADD FOREIGN KEY (customer_ID) REFERENCES Customers(customer_ID) ON DELETE SET NULL;

/* Indexes */
-- Index for date range queries on bookings 
CREATE INDEX index_bookings_dates ON Bookings(start_date, end_date);

-- Index for date range queries on rentings
CREATE INDEX index_rentings_dates ON Rentings(check_in_date, check_out_date);

-- Index for quick lookup of customers by full name
CREATE INDEX index_customers_name ON Customers(full_name);

/* Views */
-- Create view for room search
CREATE VIEW RoomSearchView AS
SELECT 
    r.*,
    hc.chain_name,
    h.hotel_name,
    h.category,
    h.address,
    h.number_of_rooms as total_rooms,
    CASE 
        WHEN b.booking_ID IS NOT NULL OR rt.renting_ID IS NOT NULL THEN false
        ELSE true
    END as is_available,
    b.start_date as booking_start,
    b.end_date as booking_end,
    rt.check_in_date as renting_start,
    rt.check_out_date as renting_end
FROM Rooms r
JOIN Hotels h ON r.hotel_ID = h.hotel_ID
JOIN HotelChains hc ON h.chain_ID = hc.chain_ID
LEFT JOIN Bookings b ON r.room_ID = b.room_ID
LEFT JOIN Rentings rt ON r.room_ID = rt.room_ID;

-- Number of available rooms per area view
CREATE VIEW RoomsPerAreaView AS
SELECT 
    SUM(h.number_of_rooms),
    trim(split_part(h.address, ',', 2)) as area
FROM Hotels h
GROUP BY area;

-- Aggregated room capacity per hotel view
CREATE VIEW HotelCapacityView AS
SELECT 
    SUM(r.capacity)
FROM Rooms r
WHERE r.hotel_ID = 1;