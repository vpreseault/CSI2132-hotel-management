DROP TABLE IF EXISTS Archives CASCADE;
DROP TABLE IF EXISTS Rentings CASCADE;
DROP TABLE IF EXISTS Bookings CASCADE;
DROP TABLE IF EXISTS Room_Has_Amenities CASCADE;
DROP TABLE IF EXISTS Amenities CASCADE;
DROP TABLE IF EXISTS Rooms CASCADE;
DROP TABLE IF EXISTS Employees CASCADE;
DROP TABLE IF EXISTS HotelEmails CASCADE;
DROP TABLE IF EXISTS HotelPhones CASCADE;
DROP TABLE IF EXISTS ChainEmails CASCADE;
DROP TABLE IF EXISTS ChainPhones CASCADE;
DROP TABLE IF EXISTS Hotels CASCADE;
DROP TABLE IF EXISTS HotelChains CASCADE;
DROP TABLE IF EXISTS Customers CASCADE;
DROP VIEW IF EXISTS RoomSearchView CASCADE;

/* Create tables without connecting the foreign keys */

-- HotelChain Table
CREATE TABLE HotelChains (
    chain_ID SERIAL PRIMARY KEY,
    chain_name VARCHAR(255) NOT NULL,
    central_office_address VARCHAR(255) NOT NULL, 
    number_of_hotels INT NOT NULL DEFAULT 0
);

-- Insert into HotelChain
INSERT INTO HotelChains (chain_name, central_office_address) VALUES
('Hilton', '456 King St, Toronto, ON'),
('Best Western', '789 Sparks St, Ottawa, ON'),
('Travelodge', '123 Crescent St, Montreal, QC'),
('Four Seasons', '321 Granville St, Vancouver, BC'),
('Fairmont', '100 Jasper Ave, Edmonton, AB');

-- Hotels Table
CREATE TABLE Hotels (
    hotel_ID SERIAL PRIMARY KEY,
    chain_ID INT NOT NULL,
    manager_ID INT UNIQUE,  
    hotel_name VARCHAR(255) NOT NULL,
    number_of_rooms INT NOT NULL DEFAULT 0,
    address VARCHAR(255) NOT NULL,
    category INT NOT NULL CHECK (category BETWEEN 1 AND 5)
);

CREATE OR REPLACE FUNCTION update_hotel_chain_count()
RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' THEN
        UPDATE HotelChains 
        SET number_of_hotels = number_of_hotels + 1
        WHERE chain_ID = NEW.chain_ID;
    ELSIF TG_OP = 'DELETE' THEN
        UPDATE HotelChains 
        SET number_of_hotels = number_of_hotels - 1
        WHERE chain_ID = OLD.chain_ID;
    END IF;
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_hotel_count
    AFTER INSERT OR UPDATE OR DELETE ON Hotels
    FOR EACH ROW
    EXECUTE FUNCTION update_hotel_chain_count();

-- Insert into Hotel
INSERT INTO Hotels (chain_ID, manager_ID, hotel_name, address, category) VALUES
(1, 1, 'Hilton Boston 1', '1101 Boylston St, Boston, MA', 3),
(1, 4, 'Hilton Montreal 2', '301 Sherbrooke St, Montreal, QC', 4),
(1, 7, 'Hilton Edmonton 3', '600 Jasper Ave, Edmonton, AB', 4),
(1, 10, 'Hilton Edmonton 4', '600 Jasper Ave, Edmonton, AB', 4),
(1, 13, 'Hilton San Francisco 5', '1400 Market St, San Francisco, CA', 5),
(1, 16, 'Hilton Vancouver 6', '500 Georgia St, Vancouver, BC', 4),
(1, 19, 'Hilton Seattle 7', '901 Pine St, Seattle, WA', 3),
(1, 22, 'Hilton New York 8', '1001 Broadway, New York, NY', 3),
(2, 25, 'Best Western Ottawa 9', '200 Elgin St, Ottawa, ON', 4),
(2, 28, 'Best Western Seattle 10', '900 Pine St, Seattle, WA', 4),
(2, 31, 'Best Western Miami 11', '1201 Ocean Dr, Miami, FL', 4),
(2, 34, 'Best Western Toronto 12', '101 King St, Toronto, ON', 4),
(2, 37, 'Best Western Vancouver 13', '500 Georgia St, Vancouver, BC', 3),
(2, 40, 'Best Western Chicago 14', '801 Michigan Ave, Chicago, IL', 3),
(2, 43, 'Best Western Las Vegas 15', '1301 Las Vegas Blvd, Las Vegas, NV', 5),
(2, 46, 'Best Western Toronto 16', '100 King St, Toronto, ON', 3),
(3, 49, 'Travelodge Calgary 17', '701 17th Ave, Calgary, AB', 5),
(3, 52, 'Travelodge Edmonton 18', '601 Jasper Ave, Edmonton, AB', 5),
(3, 55, 'Travelodge Montreal 19', '300 Sherbrooke St, Montreal, QC', 4),
(3, 58, 'Travelodge Halifax 20', '400 Barrington St, Halifax, NS', 5),
(3, 61, 'Travelodge Ottawa 21', '200 Elgin St, Ottawa, ON', 4),
(3, 64, 'Travelodge Edmonton 22', '600 Jasper Ave, Edmonton, AB', 4),
(3, 67, 'Travelodge New York 23', '1000 Broadway, New York, NY', 4),
(3, 70, 'Travelodge Calgary 24', '700 17th Ave, Calgary, AB', 3),
(4, 73, 'Four Seasons San Francisco 25', '1401 Market St, San Francisco, CA', 5),
(4, 76, 'Four Seasons Edmonton 26', '601 Jasper Ave, Edmonton, AB', 4),
(4, 79, 'Four Seasons Miami 27', '1201 Ocean Dr, Miami, FL', 3),
(4, 82, 'Four Seasons Ottawa 28', '201 Elgin St, Ottawa, ON', 5),
(4, 85, 'Four Seasons Vancouver 29', '501 Georgia St, Vancouver, BC', 5),
(4, 88, 'Four Seasons Las Vegas 30', '1300 Las Vegas Blvd, Las Vegas, NV', 3),
(4, 91, 'Four Seasons Las Vegas 31', '1301 Las Vegas Blvd, Las Vegas, NV', 3),
(4, 94, 'Four Seasons Edmonton 32', '601 Jasper Ave, Edmonton, AB', 5),
(5, 97, 'Fairmont Boston 33', '1100 Boylston St, Boston, MA', 4),
(5, 100, 'Fairmont Vancouver 34', '501 Georgia St, Vancouver, BC', 5),
(5, 103, 'Fairmont Seattle 35', '900 Pine St, Seattle, WA', 4),
(5, 106, 'Fairmont Chicago 36', '801 Michigan Ave, Chicago, IL', 5),
(5, 109, 'Fairmont Miami 37', '1200 Ocean Dr, Miami, FL', 3),
(5, 112, 'Fairmont Montreal 38', '300 Sherbrooke St, Montreal, QC', 3),
(5, 115, 'Fairmont Chicago 39', '800 Michigan Ave, Chicago, IL', 5),
(5, 118, 'Fairmont Miami 40', '1200 Ocean Dr, Miami, FL', 5);


-- Phone and Emails for hotel and hotelchain
CREATE TABLE ChainPhones (
    chain_ID INT NOT NULL,
    c_phone VARCHAR(20) UNIQUE NOT NULL CHECK (c_phone ~ '^[0-9-]+$'),
    PRIMARY KEY (chain_ID, c_phone)
);

-- Insert into ChainPhone
INSERT INTO ChainPhones (chain_ID, c_phone) VALUES
(1, '416-555-1000'),
(2, '613-555-2000'),
(3, '514-555-3000'),
(4, '604-555-4000'),
(5, '780-555-5000');

CREATE TABLE ChainEmails (
    chain_ID INT NOT NULL,
    c_email VARCHAR(255) UNIQUE NOT NULL CHECK (c_email ~* '^[A-Za-z0-9._+%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$'),
    PRIMARY KEY (chain_ID, c_email)
);

-- Insert into ChainEmail
INSERT INTO ChainEmails (chain_ID, c_email) VALUES
(1, 'info@hilton.ca'),
(2, 'contact@bestwestern.ca'),
(3, 'support@travelodge.ca'),
(4, 'hello@fourseasons.ca'),
(5, 'connect@fairmont.ca');

CREATE TABLE HotelPhones (
    hotel_ID INT NOT NULL,
    h_phone VARCHAR(20) UNIQUE NOT NULL CHECK (h_phone ~ '^[0-9-]+$'),
    PRIMARY KEY (hotel_ID, h_phone)
);

-- Insert into HotelPhone
INSERT INTO HotelPhones (hotel_ID, h_phone) VALUES
(1, '800-555-1000'),
(2, '800-555-1001'),
(3, '800-555-1002'),
(4, '800-555-1003'),
(5, '800-555-1004'),
(6, '800-555-1005'),
(7, '800-555-1006'),
(8, '800-555-1007'),
(9, '800-555-1008'),
(10, '800-555-1009'),
(11, '800-555-1010'),
(12, '800-555-1011'),
(13, '800-555-1012'),
(14, '800-555-1013'),
(15, '800-555-1014'),
(16, '800-555-1015'),
(17, '800-555-1016'),
(18, '800-555-1017'),
(19, '800-555-1018'),
(20, '800-555-1019'),
(21, '800-555-1020'),
(22, '800-555-1021'),
(23, '800-555-1022'),
(24, '800-555-1023'),
(25, '800-555-1024'),
(26, '800-555-1025'),
(27, '800-555-1026'),
(28, '800-555-1027'),
(29, '800-555-1028'),
(30, '800-555-1029'),
(31, '800-555-1030'),
(32, '800-555-1031'),
(33, '800-555-1032'),
(34, '800-555-1033'),
(35, '800-555-1034'),
(36, '800-555-1035'),
(37, '800-555-1036'),
(38, '800-555-1037'),
(39, '800-555-1038'),
(40, '800-555-1039');

CREATE TABLE HotelEmails (
    hotel_ID INT NOT NULL,
    h_email VARCHAR(255) UNIQUE NOT NULL CHECK (h_email ~* '^[A-Za-z0-9._+%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$'),
    PRIMARY KEY (hotel_ID, h_email)
);

-- Insert into HotelEmail
INSERT INTO HotelEmails (hotel_ID, h_email) VALUES
(1, 'hotel1@example.com'),
(2, 'hotel2@example.com'),
(3, 'hotel3@example.com'),
(4, 'hotel4@example.com'),
(5, 'hotel5@example.com'),
(6, 'hotel6@example.com'),
(7, 'hotel7@example.com'),
(8, 'hotel8@example.com'),
(9, 'hotel9@example.com'),
(10, 'hotel10@example.com'),
(11, 'hotel11@example.com'),
(12, 'hotel12@example.com'),
(13, 'hotel13@example.com'),
(14, 'hotel14@example.com'),
(15, 'hotel15@example.com'),
(16, 'hotel16@example.com'),
(17, 'hotel17@example.com'),
(18, 'hotel18@example.com'),
(19, 'hotel19@example.com'),
(20, 'hotel20@example.com'),
(21, 'hotel21@example.com'),
(22, 'hotel22@example.com'),
(23, 'hotel23@example.com'),
(24, 'hotel24@example.com'),
(25, 'hotel25@example.com'),
(26, 'hotel26@example.com'),
(27, 'hotel27@example.com'),
(28, 'hotel28@example.com'),
(29, 'hotel29@example.com'),
(30, 'hotel30@example.com'),
(31, 'hotel31@example.com'),
(32, 'hotel32@example.com'),
(33, 'hotel33@example.com'),
(34, 'hotel34@example.com'),
(35, 'hotel35@example.com'),
(36, 'hotel36@example.com'),
(37, 'hotel37@example.com'),
(38, 'hotel38@example.com'),
(39, 'hotel39@example.com'),
(40, 'hotel40@example.com');

-- Employees Table
CREATE TABLE Employees (
    employee_ID SERIAL PRIMARY KEY,
    hotel_ID INT NOT NULL,
    full_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL,
    ID_type VARCHAR(50) NOT NULL CHECK (ID_type IN ('SSN', 'SIN')),
    ID_number VARCHAR(255) UNIQUE NOT NULL,
    role VARCHAR(50) NOT NULL CHECK (role IN ('Manager', 'Employee'))
);

-- Insert into Employee
INSERT INTO Employees (hotel_ID, full_name, address, ID_type, ID_number, role) VALUES
(1, 'David Taylor', '528 Main St, HotelCity1', 'SIN', '001-87-1539', 'Manager'),
(1, 'Jane Martin', '539 Main St, HotelCity1', 'SIN', '002-87-7827', 'Employee'),
(1, 'John Hernandez', '114 Main St, HotelCity1', 'SSN', '003-27-4599', 'Employee'),
(2, 'Emily Williams', '575 Main St, HotelCity2', 'SIN', '004-52-6076', 'Manager'),
(2, 'John Jones', '749 Main St, HotelCity2', 'SIN', '005-87-4561', 'Employee'),
(2, 'Noah Garcia', '159 Main St, HotelCity2', 'SSN', '006-46-1167', 'Employee'),
(3, 'Olivia Williams', '450 Main St, HotelCity3', 'SSN', '007-55-2442', 'Manager'),
(3, 'Lucas Lee', '852 Main St, HotelCity3', 'SSN', '008-40-2701', 'Employee'),
(3, 'Sophia Moore', '209 Main St, HotelCity3', 'SSN', '009-74-9715', 'Employee'),
(4, 'John Smith', '313 Main St, HotelCity4', 'SIN', '010-11-9718', 'Manager'),
(4, 'Mia Lee', '687 Main St, HotelCity4', 'SSN', '011-28-7996', 'Employee'),
(4, 'Amelia Martinez', '676 Main St, HotelCity4', 'SSN', '012-55-6874', 'Employee'),
(4, 'Olivia Hernandez', '226 Main St, HotelCity4', 'SSN', '013-86-6671', 'Employee'),
(5, 'Jane Anderson', '859 Main St, HotelCity5', 'SIN', '014-40-3928', 'Manager'),
(5, 'James Brown', '518 Main St, HotelCity5', 'SIN', '015-16-2911', 'Employee'),
(5, 'Daniel Gonzalez', '273 Main St, HotelCity5', 'SIN', '016-99-9039', 'Employee'),
(5, 'James Hernandez', '847 Main St, HotelCity5', 'SIN', '017-27-9990', 'Employee'),
(5, 'Isabella Garcia', '413 Main St, HotelCity5', 'SSN', '018-56-3900', 'Employee'),
(6, 'Daniel Martin', '796 Main St, HotelCity6', 'SSN', '019-79-4643', 'Manager'),
(6, 'Daniel Lopez', '833 Main St, HotelCity6', 'SSN', '020-35-6670', 'Employee'),
(6, 'Isabella Anderson', '639 Main St, HotelCity6', 'SSN', '021-93-7590', 'Employee'),
(7, 'James Taylor', '756 Main St, HotelCity7', 'SIN', '022-99-2419', 'Manager'),
(7, 'Michael Thomas', '450 Main St, HotelCity7', 'SSN', '023-64-9331', 'Employee'),
(7, 'Michael Thomas', '774 Main St, HotelCity7', 'SIN', '024-65-3032', 'Employee'),
(7, 'Lucas Thomas', '359 Main St, HotelCity7', 'SIN', '025-49-5250', 'Employee'),
(8, 'Olivia Martinez', '935 Main St, HotelCity8', 'SSN', '026-75-2562', 'Manager'),
(8, 'Emily Jones', '609 Main St, HotelCity8', 'SIN', '027-16-3968', 'Employee'),
(8, 'Ava Smith', '171 Main St, HotelCity8', 'SIN', '028-59-8894', 'Employee'),
(8, 'Sophia Garcia', '338 Main St, HotelCity8', 'SIN', '029-83-3738', 'Employee'),
(8, 'Isabella Wilson', '725 Main St, HotelCity8', 'SSN', '030-97-3373', 'Employee'),
(9, 'Noah Martin', '298 Main St, HotelCity9', 'SSN', '031-32-5639', 'Manager'),
(9, 'Isabella Moore', '771 Main St, HotelCity9', 'SIN', '032-73-6426', 'Employee'),
(9, 'James Miller', '750 Main St, HotelCity9', 'SIN', '033-70-7640', 'Employee'),
(9, 'Olivia Jones', '532 Main St, HotelCity9', 'SIN', '034-69-5691', 'Employee'),
(9, 'Logan Williams', '813 Main St, HotelCity9', 'SSN', '035-77-3320', 'Employee'),
(10, 'Liam Gonzalez', '264 Main St, HotelCity10', 'SIN', '036-44-7366', 'Manager'),
(10, 'Sarah Martin', '350 Main St, HotelCity10', 'SIN', '037-10-7781', 'Employee'),
(10, 'Emma Moore', '761 Main St, HotelCity10', 'SSN', '038-97-9844', 'Employee'),
(10, 'Lucas Lopez', '162 Main St, HotelCity10', 'SSN', '039-70-6383', 'Employee'),
(10, 'Noah Taylor', '956 Main St, HotelCity10', 'SIN', '040-72-7627', 'Employee'),
(11, 'Liam Williams', '517 Main St, HotelCity11', 'SSN', '041-88-3868', 'Manager'),
(11, 'Emily Brown', '376 Main St, HotelCity11', 'SSN', '042-66-7804', 'Employee'),
(11, 'Logan Brown', '888 Main St, HotelCity11', 'SIN', '043-64-9394', 'Employee'),
(12, 'Amelia Lopez', '173 Main St, HotelCity12', 'SSN', '044-89-6133', 'Manager'),
(12, 'Logan Jackson', '527 Main St, HotelCity12', 'SIN', '045-44-8284', 'Employee'),
(12, 'Isabella Martinez', '844 Main St, HotelCity12', 'SIN', '046-17-3035', 'Employee'),
(13, 'Daniel Anderson', '302 Main St, HotelCity13', 'SIN', '047-81-5944', 'Manager'),
(13, 'Liam Martin', '197 Main St, HotelCity13', 'SSN', '048-79-8409', 'Employee'),
(13, 'Emily Jackson', '369 Main St, HotelCity13', 'SSN', '049-50-9013', 'Employee'),
(14, 'Elijah Thomas', '862 Main St, HotelCity14', 'SSN', '050-48-4347', 'Manager'),
(14, 'Logan Williams', '829 Main St, HotelCity14', 'SIN', '051-41-6486', 'Employee'),
(14, 'Emma Johnson', '572 Main St, HotelCity14', 'SIN', '052-75-9835', 'Employee'),
(14, 'Liam Moore', '294 Main St, HotelCity14', 'SIN', '053-36-4771', 'Employee'),
(15, 'Mia Brown', '839 Main St, HotelCity15', 'SSN', '054-22-2122', 'Manager'),
(15, 'Isabella Hernandez', '881 Main St, HotelCity15', 'SIN', '055-94-3670', 'Employee'),
(15, 'Olivia Moore', '624 Main St, HotelCity15', 'SSN', '056-58-5116', 'Employee'),
(15, 'Isabella Williams', '129 Main St, HotelCity15', 'SIN', '057-85-3113', 'Employee'),
(15, 'Olivia Taylor', '339 Main St, HotelCity15', 'SSN', '058-14-6039', 'Employee'),
(16, 'Liam Davis', '790 Main St, HotelCity16', 'SIN', '059-46-4389', 'Manager'),
(16, 'Lucas Hernandez', '813 Main St, HotelCity16', 'SIN', '060-23-5558', 'Employee'),
(16, 'David Gonzalez', '610 Main St, HotelCity16', 'SIN', '061-30-8247', 'Employee'),
(16, 'Mia Thomas', '157 Main St, HotelCity16', 'SSN', '062-87-5008', 'Employee'),
(16, 'Isabella Williams', '131 Main St, HotelCity16', 'SIN', '063-56-9448', 'Employee'),
(17, 'Logan Jackson', '572 Main St, HotelCity17', 'SSN', '064-14-9744', 'Manager'),
(17, 'Daniel Brown', '725 Main St, HotelCity17', 'SIN', '065-86-7829', 'Employee'),
(17, 'Liam Taylor', '930 Main St, HotelCity17', 'SSN', '066-23-9443', 'Employee'),
(17, 'James Brown', '188 Main St, HotelCity17', 'SIN', '067-71-1977', 'Employee'),
(18, 'Noah Lee', '285 Main St, HotelCity18', 'SSN', '068-91-6112', 'Manager'),
(18, 'Emily Jackson', '404 Main St, HotelCity18', 'SSN', '069-93-1608', 'Employee'),
(18, 'Mia Taylor', '243 Main St, HotelCity18', 'SSN', '070-96-5928', 'Employee'),
(19, 'James Thomas', '338 Main St, HotelCity19', 'SIN', '071-88-7959', 'Manager'),
(19, 'Emma Smith', '524 Main St, HotelCity19', 'SIN', '072-84-5990', 'Employee'),
(19, 'Jane Taylor', '278 Main St, HotelCity19', 'SSN', '073-12-6438', 'Employee'),
(19, 'Elijah Thomas', '795 Main St, HotelCity19', 'SIN', '074-76-6147', 'Employee'),
(20, 'Ava Jones', '860 Main St, HotelCity20', 'SSN', '075-68-6850', 'Manager'),
(20, 'Olivia Lee', '562 Main St, HotelCity20', 'SSN', '076-29-8977', 'Employee'),
(20, 'Sarah Martinez', '981 Main St, HotelCity20', 'SIN', '077-96-4454', 'Employee'),
(20, 'Emily Lopez', '327 Main St, HotelCity20', 'SIN', '078-58-1186', 'Employee'),
(21, 'Emily Jackson', '981 Main St, HotelCity21', 'SSN', '079-76-4413', 'Manager'),
(21, 'Michael Lee', '708 Main St, HotelCity21', 'SSN', '080-44-9223', 'Employee'),
(21, 'Noah Williams', '684 Main St, HotelCity21', 'SIN', '081-47-3257', 'Employee'),
(21, 'Isabella Gonzalez', '947 Main St, HotelCity21', 'SSN', '082-88-9423', 'Employee'),
(21, 'Liam Garcia', '344 Main St, HotelCity21', 'SSN', '083-57-7147', 'Employee'),
(22, 'Elijah Johnson', '919 Main St, HotelCity22', 'SSN', '084-30-5744', 'Manager'),
(22, 'Emma Martin', '915 Main St, HotelCity22', 'SIN', '085-47-3946', 'Employee'),
(22, 'Elijah Wilson', '990 Main St, HotelCity22', 'SSN', '086-24-5561', 'Employee'),
(22, 'Liam Jones', '990 Main St, HotelCity22', 'SSN', '087-73-4351', 'Employee'),
(22, 'Logan Garcia', '531 Main St, HotelCity22', 'SIN', '088-42-8223', 'Employee'),
(23, 'Amelia Williams', '809 Main St, HotelCity23', 'SSN', '089-80-5761', 'Manager'),
(23, 'Michael Jones', '141 Main St, HotelCity23', 'SIN', '090-52-9731', 'Employee'),
(23, 'Isabella Thomas', '529 Main St, HotelCity23', 'SSN', '091-98-3310', 'Employee'),
(24, 'Michael Brown', '527 Main St, HotelCity24', 'SIN', '092-61-3857', 'Manager'),
(24, 'Liam Lopez', '815 Main St, HotelCity24', 'SSN', '093-97-9550', 'Employee'),
(24, 'Logan Jones', '486 Main St, HotelCity24', 'SIN', '094-24-5670', 'Employee'),
(25, 'Amelia Jones', '231 Main St, HotelCity25', 'SIN', '095-36-8112', 'Manager'),
(25, 'Logan Wilson', '268 Main St, HotelCity25', 'SSN', '096-85-9439', 'Employee'),
(25, 'Amelia Brown', '870 Main St, HotelCity25', 'SSN', '097-59-6392', 'Employee'),
(26, 'Lucas Hernandez', '897 Main St, HotelCity26', 'SSN', '098-65-4890', 'Manager'),
(26, 'Isabella Johnson', '483 Main St, HotelCity26', 'SIN', '099-44-1971', 'Employee'),
(26, 'Sophia Taylor', '119 Main St, HotelCity26', 'SSN', '100-67-8323', 'Employee'),
(26, 'Michael Garcia', '758 Main St, HotelCity26', 'SIN', '101-88-1607', 'Employee'),
(27, 'Emma Miller', '946 Main St, HotelCity27', 'SIN', '102-35-4079', 'Manager'),
(27, 'Amelia Anderson', '656 Main St, HotelCity27', 'SSN', '103-72-2910', 'Employee'),
(27, 'Ava Jones', '627 Main St, HotelCity27', 'SIN', '104-47-8111', 'Employee'),
(27, 'Mia Smith', '608 Main St, HotelCity27', 'SIN', '105-83-3671', 'Employee'),
(27, 'Noah Thomas', '505 Main St, HotelCity27', 'SSN', '106-91-8279', 'Employee'),
(28, 'Jane Gonzalez', '441 Main St, HotelCity28', 'SSN', '107-70-5463', 'Manager'),
(28, 'Olivia Thomas', '908 Main St, HotelCity28', 'SSN', '108-33-3094', 'Employee'),
(28, 'Emma Martin', '150 Main St, HotelCity28', 'SIN', '109-47-9517', 'Employee'),
(28, 'Ava Martin', '509 Main St, HotelCity28', 'SSN', '110-67-2431', 'Employee'),
(28, 'Noah Miller', '728 Main St, HotelCity28', 'SSN', '111-85-6787', 'Employee'),
(29, 'Elijah Martinez', '719 Main St, HotelCity29', 'SSN', '112-88-6957', 'Manager'),
(29, 'Olivia Davis', '967 Main St, HotelCity29', 'SSN', '113-88-2641', 'Employee'),
(29, 'Ava Jones', '772 Main St, HotelCity29', 'SIN', '114-41-5449', 'Employee'),
(29, 'Emma Martinez', '880 Main St, HotelCity29', 'SIN', '115-83-4137', 'Employee'),
(29, 'Olivia Smith', '433 Main St, HotelCity29', 'SSN', '116-25-6783', 'Employee'),
(30, 'Sophia Williams', '790 Main St, HotelCity30', 'SIN', '117-53-8405', 'Manager'),
(30, 'Emma Martinez', '309 Main St, HotelCity30', 'SSN', '118-76-3844', 'Employee'),
(30, 'Michael Garcia', '172 Main St, HotelCity30', 'SIN', '119-82-3890', 'Employee'),
(31, 'Emma Garcia', '243 Main St, HotelCity31', 'SIN', '120-95-4751', 'Manager'),
(31, 'Sophia Williams', '940 Main St, HotelCity31', 'SSN', '121-13-1453', 'Employee'),
(31, 'Noah Jones', '666 Main St, HotelCity31', 'SIN', '122-95-1351', 'Employee'),
(31, 'Lucas Davis', '683 Main St, HotelCity31', 'SSN', '123-21-8835', 'Employee'),
(31, 'Amelia Moore', '995 Main St, HotelCity31', 'SIN', '124-54-9251', 'Employee'),
(32, 'Daniel Lopez', '616 Main St, HotelCity32', 'SIN', '125-22-4222', 'Manager'),
(32, 'Sophia Jones', '623 Main St, HotelCity32', 'SIN', '126-13-5262', 'Employee'),
(32, 'Amelia Smith', '555 Main St, HotelCity32', 'SIN', '127-27-4205', 'Employee'),
(33, 'Emily Williams', '846 Main St, HotelCity33', 'SIN', '128-46-3212', 'Manager'),
(33, 'Liam Taylor', '535 Main St, HotelCity33', 'SSN', '129-33-2891', 'Employee'),
(33, 'Amelia Wilson', '189 Main St, HotelCity33', 'SIN', '130-68-3512', 'Employee'),
(33, 'Daniel Jackson', '577 Main St, HotelCity33', 'SSN', '131-17-6708', 'Employee'),
(33, 'James Garcia', '173 Main St, HotelCity33', 'SIN', '132-11-8721', 'Employee'),
(34, 'Liam Gonzalez', '701 Main St, HotelCity34', 'SIN', '133-89-2848', 'Manager'),
(34, 'Michael Jackson', '991 Main St, HotelCity34', 'SSN', '134-80-1688', 'Employee'),
(34, 'David Garcia', '929 Main St, HotelCity34', 'SIN', '135-25-6208', 'Employee'),
(35, 'Emma Miller', '317 Main St, HotelCity35', 'SSN', '136-30-4189', 'Manager'),
(35, 'Noah Davis', '609 Main St, HotelCity35', 'SIN', '137-38-2903', 'Employee'),
(35, 'Ava Davis', '909 Main St, HotelCity35', 'SSN', '138-84-9225', 'Employee'),
(35, 'Logan Anderson', '287 Main St, HotelCity35', 'SIN', '139-33-2002', 'Employee'),
(36, 'David Garcia', '308 Main St, HotelCity36', 'SSN', '140-71-7830', 'Manager'),
(36, 'Michael Williams', '227 Main St, HotelCity36', 'SIN', '141-65-2024', 'Employee'),
(36, 'Noah Davis', '824 Main St, HotelCity36', 'SSN', '142-28-4819', 'Employee'),
(37, 'Olivia Hernandez', '390 Main St, HotelCity37', 'SIN', '143-76-3725', 'Manager'),
(37, 'Isabella Jones', '725 Main St, HotelCity37', 'SSN', '144-25-2207', 'Employee'),
(37, 'Sophia Miller', '163 Main St, HotelCity37', 'SIN', '145-87-5957', 'Employee'),
(37, 'John Smith', '661 Main St, HotelCity37', 'SSN', '146-83-8997', 'Employee'),
(37, 'Ava Wilson', '647 Main St, HotelCity37', 'SSN', '147-65-7390', 'Employee'),
(38, 'Elijah Taylor', '225 Main St, HotelCity38', 'SSN', '148-12-1755', 'Manager'),
(38, 'Logan Lopez', '366 Main St, HotelCity38', 'SIN', '149-79-8001', 'Employee'),
(38, 'Isabella Smith', '954 Main St, HotelCity38', 'SSN', '150-73-6508', 'Employee'),
(38, 'Olivia Moore', '599 Main St, HotelCity38', 'SSN', '151-27-9733', 'Employee'),
(38, 'Sophia Thomas', '304 Main St, HotelCity38', 'SIN', '152-37-6689', 'Employee'),
(39, 'Emma Williams', '917 Main St, HotelCity39', 'SIN', '153-42-8319', 'Manager'),
(39, 'Sophia Davis', '747 Main St, HotelCity39', 'SSN', '154-23-4411', 'Employee'),
(39, 'Isabella Williams', '713 Main St, HotelCity39', 'SIN', '155-35-3804', 'Employee'),
(39, 'Liam Hernandez', '445 Main St, HotelCity39', 'SIN', '156-71-8254', 'Employee'),
(40, 'Sarah Garcia', '580 Main St, HotelCity40', 'SSN', '157-36-3569', 'Manager'),
(40, 'Mia Johnson', '447 Main St, HotelCity40', 'SSN', '158-40-9599', 'Employee'),
(40, 'Daniel Anderson', '311 Main St, HotelCity40', 'SIN', '159-68-9219', 'Employee');

-- Customers Table
CREATE TABLE Customers (
    customer_ID SERIAL PRIMARY KEY,
    full_name VARCHAR(255) NOT NULL,
    ID_type VARCHAR(50) NOT NULL CHECK (ID_type IN ('SSN', 'SIN', 'Drivers License')),
    ID_number VARCHAR(255) UNIQUE NOT NULL,
    address VARCHAR(255) NOT NULL,
    registration_date VARCHAR(255) NOT NULL
);

-- Insert into Customers
INSERT INTO Customers (full_name, ID_type, ID_number, address, registration_date) VALUES
('Noah Rhodes', 'SIN', 'N42868828', '242 Main St, Halifax', '2024-12-12'),
('Leslie Johnson', 'Drivers License', 'L23756669', '858 Main St, Boston', '2024-02-06'),
('Jonathan Johnson', 'Drivers License', 'J21668732', '532 Main St, New York', '2024-03-18'),
('Meredith Barnes', 'SSN', 'M13999315', '323 Main St, Ottawa', '2024-06-23'),
('Rhonda Smith', 'SSN', 'R77827638', '127 Main St, New York', '2024-11-08'),
('Jay Ramirez', 'Drivers License', 'J36687537', '765 Main St, Miami', '2024-03-24'),
('Gabrielle Davis', 'Drivers License', 'G83140807', '325 Main St, Calgary', '2024-02-07'),
('Gregory Baker', 'SIN', 'G89089901', '928 Main St, Vancouver', '2024-01-17'),
('Kimberly Dudley', 'SSN', 'K31429110', '532 Main St, Miami', '2024-05-27'),
('Edward Fuller', 'SIN', 'E47295260', '320 Main St, Montreal', '2024-12-09'),
('Laura Bush', 'SIN', 'L23718431', '489 Main St, Ottawa', '2024-01-18'),
('Patricia Galloway', 'SSN', 'P58181396', '452 Main St, San Francisco', '2024-11-28'),
('Brian Ramirez', 'Drivers License', 'B45503389', '144 Main St, Las Vegas', '2024-09-03'),
('Carla Kelly', 'Drivers License', 'C71662963', '227 Main St, Seattle', '2024-09-17'),
('Timothy Wong', 'SIN', 'T20576383', '400 Main St, Seattle', '2024-08-24'),
('Kimberly Sanchez', 'Drivers License', 'K93016315', '470 Main St, San Francisco', '2024-06-28'),
('William Bowman', 'Drivers License', 'W35808537', '171 Main St, Miami', '2024-08-04'),
('Frederick Tate', 'SSN', 'F98753260', '891 Main St, Halifax', '2024-01-22'),
('Andrew Stewart', 'SIN', 'A20709497', '338 Main St, San Francisco', '2024-04-13'),
('Thomas Bradley', 'SSN', 'T61019678', '564 Main St, Vancouver', '2024-10-05');

-- Rooms Table
CREATE TABLE Rooms (
    room_ID SERIAL PRIMARY KEY,
    hotel_ID INT NOT NULL,
    room_number VARCHAR(10) NOT NULL,
    capacity INT NOT NULL CHECK (capacity > 0),
    price DECIMAL(10,2) NOT NULL CHECK (price >= 0),
    view_type VARCHAR(20) CHECK (view_type IN ('Mountain', 'Sea')),
    extendable BOOLEAN NOT NULL,
    damaged BOOLEAN NOT NULL
);

CREATE OR REPLACE FUNCTION update_hotel_room_count()
RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' THEN
        UPDATE Hotels 
        SET number_of_rooms = number_of_rooms + 1
        WHERE hotel_ID = NEW.hotel_ID;
    ELSIF TG_OP = 'DELETE' THEN
        UPDATE Hotels 
        SET number_of_rooms = number_of_rooms - 1
        WHERE hotel_ID = OLD.hotel_ID;
    END IF;
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_room_count
    AFTER INSERT OR UPDATE OR DELETE ON Rooms
    FOR EACH ROW
    EXECUTE FUNCTION update_hotel_room_count();

-- Insert into Rooms
INSERT INTO Rooms (hotel_ID, room_number, capacity, price, view_type, extendable, damaged) VALUES
(1, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(1, '101', 4, 150.00, 'Mountain', FALSE, FALSE),
(1, '102', 7, 225.00, 'Mountain', TRUE, FALSE),
(1, '103', 5, 175.00, 'Mountain', FALSE, TRUE),
(1, '104', 3, 125.00, 'Sea', FALSE, FALSE),
(2, '100', 10, 300.00, 'Sea', FALSE, FALSE),
(2, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(2, '102', 4, 150.00, 'Mountain', TRUE, FALSE),
(2, '103', 8, 250.00, 'Mountain', FALSE, TRUE),
(2, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(3, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(3, '101', 2, 100.00, 'Mountain', FALSE, FALSE),
(3, '102', 5, 175.00, 'Sea', TRUE, FALSE),
(3, '103', 7, 225.00, 'Mountain', FALSE, TRUE),
(3, '104', 6, 200.00, 'Sea', FALSE, FALSE),
(4, '100', 5, 175.00, 'Sea', FALSE, FALSE),
(4, '101', 7, 225.00, 'Mountain', FALSE, FALSE),
(4, '102', 5, 175.00, 'Mountain', TRUE, FALSE),
(4, '103', 8, 250.00, 'Mountain', FALSE, TRUE),
(4, '104', 4, 150.00, 'Mountain', FALSE, FALSE),
(5, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(5, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(5, '102', 10, 300.00, 'Mountain', TRUE, FALSE),
(5, '103', 8, 250.00, 'Mountain', FALSE, TRUE),
(5, '104', 7, 225.00, 'Sea', FALSE, FALSE),
(6, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(6, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(6, '102', 9, 275.00, 'Sea', TRUE, FALSE),
(6, '103', 2, 100.00, 'Sea', FALSE, TRUE),
(6, '104', 4, 150.00, 'Sea', FALSE, FALSE),
(7, '100', 8, 250.00, 'Sea', FALSE, FALSE),
(7, '101', 3, 125.00, 'Mountain', FALSE, FALSE),
(7, '102', 8, 250.00, 'Mountain', TRUE, FALSE),
(7, '103', 9, 275.00, 'Mountain', FALSE, TRUE),
(7, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(8, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(8, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(8, '102', 6, 200.00, 'Mountain', TRUE, FALSE),
(8, '103', 3, 125.00, 'Mountain', FALSE, TRUE),
(8, '104', 8, 250.00, 'Sea', FALSE, FALSE),
(9, '100', 9, 275.00, 'Sea', FALSE, FALSE),
(9, '101', 2, 100.00, 'Mountain', FALSE, FALSE),
(9, '102', 6, 200.00, 'Sea', TRUE, FALSE),
(9, '103', 10, 300.00, 'Sea', FALSE, TRUE),
(9, '104', 6, 200.00, 'Sea', FALSE, FALSE),
(10, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(10, '101', 7, 225.00, 'Mountain', FALSE, FALSE),
(10, '102', 4, 150.00, 'Sea', TRUE, FALSE),
(10, '103', 7, 225.00, 'Mountain', FALSE, TRUE),
(10, '104', 2, 100.00, 'Sea', FALSE, FALSE),
(11, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(11, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(11, '102', 5, 175.00, 'Sea', TRUE, FALSE),
(11, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(11, '104', 3, 125.00, 'Mountain', FALSE, FALSE),
(12, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(12, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(12, '102', 4, 150.00, 'Sea', TRUE, FALSE),
(12, '103', 9, 275.00, 'Sea', FALSE, TRUE),
(12, '104', 6, 200.00, 'Mountain', FALSE, FALSE),
(13, '100', 5, 175.00, 'Sea', FALSE, FALSE),
(13, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(13, '102', 5, 175.00, 'Mountain', TRUE, FALSE),
(13, '103', 8, 250.00, 'Mountain', FALSE, TRUE),
(13, '104', 9, 275.00, 'Mountain', FALSE, FALSE),
(14, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(14, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(14, '102', 5, 175.00, 'Sea', TRUE, FALSE),
(14, '103', 7, 225.00, 'Sea', FALSE, TRUE),
(14, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(15, '100', 5, 175.00, 'Sea', FALSE, FALSE),
(15, '101', 2, 100.00, 'Mountain', FALSE, FALSE),
(15, '102', 3, 125.00, 'Sea', TRUE, FALSE),
(15, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(15, '104', 2, 100.00, 'Mountain', FALSE, FALSE),
(16, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(16, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(16, '102', 5, 175.00, 'Mountain', TRUE, FALSE),
(16, '103', 9, 275.00, 'Sea', FALSE, TRUE),
(16, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(17, '100', 9, 275.00, 'Sea', FALSE, FALSE),
(17, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(17, '102', 9, 275.00, 'Mountain', TRUE, FALSE),
(17, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(17, '104', 3, 125.00, 'Mountain', FALSE, FALSE),
(18, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(18, '101', 8, 250.00, 'Mountain', FALSE, FALSE),
(18, '102', 8, 250.00, 'Mountain', TRUE, FALSE),
(18, '103', 2, 100.00, 'Sea', FALSE, TRUE),
(18, '104', 2, 100.00, 'Mountain', FALSE, FALSE),
(19, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(19, '101', 3, 125.00, 'Mountain', FALSE, FALSE),
(19, '102', 5, 175.00, 'Sea', TRUE, FALSE),
(19, '103', 5, 175.00, 'Mountain', FALSE, TRUE),
(19, '104', 4, 150.00, 'Mountain', FALSE, FALSE),
(20, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(20, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(20, '102', 9, 275.00, 'Sea', TRUE, FALSE),
(20, '103', 3, 125.00, 'Mountain', FALSE, TRUE),
(20, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(21, '100', 2, 100.00, 'Sea', FALSE, FALSE),
(21, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(21, '102', 2, 100.00, 'Sea', TRUE, FALSE),
(21, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(21, '104', 8, 250.00, 'Mountain', FALSE, FALSE),
(22, '100', 9, 275.00, 'Sea', FALSE, FALSE),
(22, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(22, '102', 8, 250.00, 'Sea', TRUE, FALSE),
(22, '103', 4, 150.00, 'Mountain', FALSE, TRUE),
(22, '104', 2, 100.00, 'Mountain', FALSE, FALSE),
(23, '100', 6, 200.00, 'Sea', FALSE, FALSE),
(23, '101', 9, 275.00, 'Mountain', FALSE, FALSE),
(23, '102', 6, 200.00, 'Mountain', TRUE, FALSE),
(23, '103', 10, 300.00, 'Mountain', FALSE, TRUE),
(23, '104', 4, 150.00, 'Sea', FALSE, FALSE),
(24, '100', 6, 200.00, 'Sea', FALSE, FALSE),
(24, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(24, '102', 2, 100.00, 'Sea', TRUE, FALSE),
(24, '103', 7, 225.00, 'Sea', FALSE, TRUE),
(24, '104', 2, 100.00, 'Mountain', FALSE, FALSE),
(25, '100', 10, 300.00, 'Sea', FALSE, FALSE),
(25, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(25, '102', 4, 150.00, 'Sea', TRUE, FALSE),
(25, '103', 10, 300.00, 'Sea', FALSE, TRUE),
(25, '104', 4, 150.00, 'Sea', FALSE, FALSE),
(26, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(26, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(26, '102', 8, 250.00, 'Sea', TRUE, FALSE),
(26, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(26, '104', 3, 125.00, 'Mountain', FALSE, FALSE),
(27, '100', 10, 300.00, 'Sea', FALSE, FALSE),
(27, '101', 7, 225.00, 'Mountain', FALSE, FALSE),
(27, '102', 6, 200.00, 'Sea', TRUE, FALSE),
(27, '103', 7, 225.00, 'Sea', FALSE, TRUE),
(27, '104', 6, 200.00, 'Mountain', FALSE, FALSE),
(28, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(28, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(28, '102', 9, 275.00, 'Mountain', TRUE, FALSE),
(28, '103', 3, 125.00, 'Sea', FALSE, TRUE),
(28, '104', 9, 275.00, 'Sea', FALSE, FALSE),
(29, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(29, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(29, '102', 5, 175.00, 'Mountain', TRUE, FALSE),
(29, '103', 4, 150.00, 'Mountain', FALSE, TRUE),
(29, '104', 3, 125.00, 'Sea', FALSE, FALSE),
(30, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(30, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(30, '102', 4, 150.00, 'Mountain', TRUE, FALSE),
(30, '103', 10, 300.00, 'Mountain', FALSE, TRUE),
(30, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(31, '100', 10, 300.00, 'Sea', FALSE, FALSE),
(31, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(31, '102', 3, 125.00, 'Sea', TRUE, FALSE),
(31, '103', 6, 200.00, 'Sea', FALSE, TRUE),
(31, '104', 3, 125.00, 'Sea', FALSE, FALSE),
(32, '100', 6, 200.00, 'Sea', FALSE, FALSE),
(32, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(32, '102', 5, 175.00, 'Mountain', TRUE, FALSE),
(32, '103', 5, 175.00, 'Mountain', FALSE, TRUE),
(32, '104', 10, 300.00, 'Mountain', FALSE, FALSE),
(33, '100', 6, 200.00, 'Sea', FALSE, FALSE),
(33, '101', 2, 100.00, 'Mountain', FALSE, FALSE),
(33, '102', 3, 125.00, 'Mountain', TRUE, FALSE),
(33, '103', 6, 200.00, 'Sea', FALSE, TRUE),
(33, '104', 2, 100.00, 'Mountain', FALSE, FALSE),
(34, '100', 4, 150.00, 'Sea', FALSE, FALSE),
(34, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(34, '102', 4, 150.00, 'Mountain', TRUE, FALSE),
(34, '103', 10, 300.00, 'Mountain', FALSE, TRUE),
(34, '104', 10, 300.00, 'Sea', FALSE, FALSE),
(35, '100', 3, 125.00, 'Sea', FALSE, FALSE),
(35, '101', 3, 125.00, 'Mountain', FALSE, FALSE),
(35, '102', 4, 150.00, 'Sea', TRUE, FALSE),
(35, '103', 7, 225.00, 'Sea', FALSE, TRUE),
(35, '104', 8, 250.00, 'Sea', FALSE, FALSE),
(36, '100', 2, 100.00, 'Sea', FALSE, FALSE),
(36, '101', 6, 200.00, 'Mountain', FALSE, FALSE),
(36, '102', 7, 225.00, 'Sea', TRUE, FALSE),
(36, '103', 7, 225.00, 'Sea', FALSE, TRUE),
(36, '104', 5, 175.00, 'Sea', FALSE, FALSE),
(37, '100', 7, 225.00, 'Sea', FALSE, FALSE),
(37, '101', 10, 300.00, 'Mountain', FALSE, FALSE),
(37, '102', 8, 250.00, 'Sea', TRUE, FALSE),
(37, '103', 5, 175.00, 'Sea', FALSE, TRUE),
(37, '104', 4, 150.00, 'Mountain', FALSE, FALSE),
(38, '100', 2, 100.00, 'Sea', FALSE, FALSE),
(38, '101', 4, 150.00, 'Mountain', FALSE, FALSE),
(38, '102', 7, 225.00, 'Mountain', TRUE, FALSE),
(38, '103', 5, 175.00, 'Mountain', FALSE, TRUE),
(38, '104', 4, 150.00, 'Sea', FALSE, FALSE),
(39, '100', 8, 250.00, 'Sea', FALSE, FALSE),
(39, '101', 2, 100.00, 'Mountain', FALSE, FALSE),
(39, '102', 9, 275.00, 'Sea', TRUE, FALSE),
(39, '103', 5, 175.00, 'Mountain', FALSE, TRUE),
(39, '104', 7, 225.00, 'Mountain', FALSE, FALSE),
(40, '100', 5, 175.00, 'Sea', FALSE, FALSE),
(40, '101', 5, 175.00, 'Mountain', FALSE, FALSE),
(40, '102', 2, 100.00, 'Sea', TRUE, FALSE),
(40, '103', 8, 250.00, 'Mountain', FALSE, TRUE),
(40, '104', 6, 200.00, 'Sea', FALSE, FALSE);

-- Amenities Table
CREATE TABLE Amenities (
    amenity_ID SERIAL PRIMARY KEY,
    amenity_name VARCHAR(255) NOT NULL UNIQUE
);

-- Insert into Amenities
INSERT INTO Amenities (amenity_name) VALUES
('WiFi'),
('Air Conditioning'),
('Television'),
('Mini Fridge'),
('Room Service'),
('Gym Access'),
('Pool Access'),
('Spa Access'),
('Balcony'),
('Coffee Maker');

-- Room_Has_Amenities 
CREATE TABLE Room_Has_Amenities (
    room_ID INT NOT NULL,
    amenity_ID INT NOT NULL,
    PRIMARY KEY (room_ID, amenity_ID)
);

-- Insert into Room_Has_Amenities
INSERT INTO Room_Has_Amenities (room_ID, amenity_ID) VALUES
(1, 6),
(1, 9),
(2, 9),
(2, 6),
(2, 1),
(4, 3),
(4, 5),
(7, 7),
(7, 6),
(7, 9),
(7, 4),
(8, 9),
(8, 2),
(8, 7),
(8, 5),
(9, 5),
(11, 7),
(11, 1),
(11, 4),
(11, 3),
(11, 8),
(13, 6),
(13, 10),
(13, 2),
(13, 9),
(13, 3),
(14, 5),
(14, 7),
(14, 6),
(14, 4),
(15, 5),
(15, 9),
(15, 3),
(15, 2),
(15, 4),
(16, 7),
(16, 3),
(16, 5),
(16, 4),
(16, 8),
(18, 5),
(18, 4),
(19, 10),
(19, 6),
(19, 8),
(20, 8),
(20, 4),
(20, 10),
(21, 3),
(21, 2),
(21, 5),
(21, 8),
(21, 6),
(22, 10),
(22, 6),
(22, 2),
(22, 7),
(22, 8),
(23, 5),
(23, 4),
(23, 9),
(23, 2),
(23, 1),
(25, 8),
(26, 2),
(26, 8),
(26, 7),
(26, 6),
(27, 4),
(27, 7),
(27, 8),
(27, 10),
(28, 3),
(29, 1),
(29, 2),
(29, 7),
(29, 9),
(29, 8),
(30, 9),
(30, 8),
(30, 1),
(30, 5),
(30, 2),
(32, 3),
(32, 8),
(32, 6),
(33, 10),
(33, 9),
(33, 7),
(34, 8),
(34, 3),
(34, 10),
(34, 4),
(35, 4),
(35, 5),
(36, 8),
(36, 4),
(36, 5),
(36, 9),
(38, 5),
(38, 4),
(38, 10),
(38, 3),
(38, 7),
(39, 2),
(39, 3),
(39, 9),
(39, 10),
(40, 3),
(40, 4),
(40, 2),
(41, 7),
(41, 6),
(41, 8),
(42, 1),
(42, 4),
(42, 7),
(43, 10),
(43, 1),
(43, 7),
(44, 1),
(44, 6),
(44, 5),
(45, 7),
(45, 9),
(45, 4),
(46, 4),
(46, 5),
(46, 7),
(47, 1),
(47, 7),
(47, 6),
(48, 7),
(48, 3),
(48, 8),
(48, 2),
(48, 5),
(49, 1),
(49, 7),
(49, 10),
(49, 8),
(50, 7),
(50, 3),
(50, 8),
(50, 2),
(50, 1),
(51, 7),
(51, 6),
(52, 8),
(53, 6),
(53, 7),
(54, 7),
(54, 5),
(56, 1),
(56, 9),
(56, 10),
(57, 4),
(57, 2),
(58, 1),
(58, 10),
(58, 4),
(58, 2),
(58, 9),
(59, 3),
(59, 4),
(59, 10),
(59, 9),
(60, 2),
(60, 4),
(60, 8),
(60, 6),
(60, 3),
(61, 3),
(61, 2),
(62, 5),
(64, 1),
(64, 5),
(64, 7),
(64, 4),
(65, 4),
(65, 2),
(65, 10),
(65, 1),
(65, 6),
(66, 10),
(66, 2),
(67, 1),
(67, 6),
(67, 7),
(67, 9),
(68, 2),
(68, 9),
(69, 6),
(69, 1),
(69, 7),
(69, 8),
(69, 4),
(71, 6),
(71, 8),
(71, 3),
(72, 3),
(72, 9),
(72, 5),
(73, 9),
(73, 8),
(73, 10),
(73, 4),
(74, 10),
(74, 5),
(74, 6),
(74, 7),
(74, 2),
(76, 8),
(76, 4),
(77, 10),
(77, 7),
(77, 6),
(79, 6),
(79, 3),
(79, 8),
(80, 6),
(81, 6),
(81, 5),
(82, 5),
(82, 9),
(82, 1),
(82, 10),
(83, 2),
(84, 7),
(85, 9),
(85, 4),
(85, 8),
(86, 8),
(86, 10),
(86, 1),
(86, 9),
(86, 3),
(87, 7),
(88, 4),
(88, 5),
(88, 6),
(88, 10),
(88, 9),
(89, 6),
(89, 7),
(89, 10),
(89, 3),
(90, 8),
(90, 5),
(90, 9),
(90, 3),
(90, 2),
(92, 4),
(92, 6),
(92, 2),
(92, 9),
(92, 5),
(93, 3),
(93, 4),
(93, 9),
(93, 6),
(93, 8),
(94, 10),
(94, 9),
(95, 5),
(95, 2),
(95, 4),
(95, 3),
(96, 6),
(97, 5),
(99, 9),
(99, 3),
(99, 5),
(99, 1),
(99, 7),
(100, 5),
(100, 3),
(100, 8),
(100, 1),
(102, 5),
(102, 8),
(102, 9),
(102, 4),
(103, 3),
(103, 1),
(104, 8),
(104, 2),
(106, 8),
(106, 2),
(106, 1),
(107, 3),
(108, 5),
(108, 2),
(108, 4),
(108, 1),
(109, 7),
(109, 4),
(109, 10),
(109, 9),
(110, 5),
(110, 7),
(110, 10),
(111, 10),
(111, 1),
(111, 2),
(111, 7),
(112, 4),
(113, 2),
(113, 3),
(114, 3),
(115, 2),
(115, 3),
(115, 1),
(115, 4),
(116, 10),
(116, 8),
(116, 5),
(118, 5),
(119, 5),
(119, 8),
(119, 2),
(119, 6),
(119, 9),
(120, 10),
(120, 4),
(121, 2),
(121, 9),
(121, 4),
(122, 3),
(122, 5),
(122, 10),
(122, 1),
(122, 7),
(123, 5),
(124, 10),
(124, 5),
(124, 8),
(124, 1),
(125, 5),
(125, 7),
(125, 10),
(126, 9),
(126, 8),
(126, 10),
(126, 1),
(127, 1),
(127, 7),
(127, 6),
(127, 5),
(128, 1),
(128, 2),
(129, 10),
(130, 1),
(130, 5),
(130, 10),
(130, 7),
(131, 8),
(132, 8),
(132, 5),
(132, 3),
(132, 9),
(133, 8),
(133, 2),
(133, 10),
(134, 7),
(134, 6),
(135, 2),
(135, 3),
(136, 7),
(136, 8),
(137, 7),
(137, 9),
(139, 2),
(139, 6),
(139, 5),
(140, 2),
(140, 7),
(141, 1),
(141, 9),
(141, 8),
(141, 4),
(143, 9),
(144, 10),
(144, 8),
(145, 8),
(145, 1),
(145, 4),
(145, 3),
(145, 5),
(146, 5),
(147, 8),
(147, 2),
(147, 1),
(148, 10),
(148, 4),
(148, 3),
(148, 8),
(148, 5),
(150, 7),
(150, 2),
(150, 4),
(150, 10),
(152, 2),
(152, 3),
(152, 8),
(153, 5),
(153, 9),
(153, 10),
(153, 4),
(153, 7),
(154, 4),
(154, 8),
(154, 3),
(155, 4),
(155, 9),
(155, 3),
(157, 7),
(157, 6),
(158, 5),
(158, 1),
(158, 10),
(158, 6),
(159, 10),
(159, 8),
(160, 8),
(161, 8),
(161, 6),
(161, 9),
(161, 5),
(162, 7),
(162, 8),
(162, 6),
(162, 10),
(163, 4),
(164, 7),
(164, 4),
(164, 10),
(164, 1),
(165, 8),
(165, 7),
(166, 3),
(166, 8),
(166, 1),
(167, 9),
(168, 6),
(168, 2),
(168, 8),
(168, 1),
(169, 8),
(169, 1),
(169, 3),
(169, 4),
(170, 3),
(170, 2),
(170, 8),
(170, 7),
(170, 10),
(171, 10),
(171, 7),
(172, 2),
(172, 6),
(172, 7),
(172, 3),
(172, 9),
(173, 8),
(173, 9),
(173, 1),
(173, 5),
(173, 10),
(174, 5),
(175, 2),
(176, 2),
(176, 10),
(176, 8),
(177, 5),
(180, 1),
(180, 5),
(181, 6),
(181, 7),
(182, 4),
(183, 7),
(183, 3),
(183, 9),
(183, 2),
(185, 7),
(185, 4),
(185, 8),
(185, 5),
(186, 4),
(187, 5),
(187, 8),
(187, 10),
(188, 1),
(188, 8),
(188, 5),
(188, 6),
(188, 9),
(189, 2),
(190, 6),
(190, 5),
(190, 7),
(191, 5),
(191, 8),
(191, 10),
(191, 2),
(191, 4),
(192, 2),
(192, 4),
(192, 7),
(193, 6),
(193, 5),
(193, 9),
(193, 1),
(194, 7),
(194, 5),
(194, 1),
(194, 9),
(194, 6),
(195, 1),
(195, 8),
(195, 5),
(195, 7),
(195, 2),
(196, 6),
(196, 4),
(196, 9),
(196, 5),
(197, 3),
(197, 2),
(198, 1),
(198, 5),
(198, 8),
(198, 10),
(198, 9),
(199, 3),
(199, 2),
(200, 6),
(200, 7);

-- Bookings Table
CREATE TABLE Bookings (
    booking_ID SERIAL PRIMARY KEY,
    customer_ID INT NOT NULL,
    room_ID INT NOT NULL,
    booking_date DATE NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    total_price DECIMAL(10,2) NOT NULL CHECK (total_price >= 0),
    CHECK (booking_date <= start_Date),
    CHECK (start_Date < end_Date)
);

-- Insert into Bookings
INSERT INTO Bookings (customer_ID, room_ID, booking_date, start_date, end_date, total_price) VALUES
(6, 52, '2025-07-06', '2025-08-01', '2025-08-04', 349.00),
(12, 136, '2025-05-23', '2025-06-22', '2025-06-28', 614.00),
(6, 66, '2025-11-15', '2025-12-11', '2025-12-16', 517.00),
(11, 30, '2025-10-08', '2025-10-11', '2025-10-16', 498.00),
(8, 174, '2025-08-04', '2025-09-01', '2025-09-06', 526.00),
(3, 102, '2025-11-27', '2025-12-06', '2025-12-08', 248.00),
(4, 117, '2025-09-04', '2025-09-26', '2025-09-30', 413.00),
(19, 98, '2025-05-22', '2025-05-26', '2025-05-30', 409.00),
(16, 7, '2025-06-13', '2025-07-12', '2025-07-18', 621.00),
(20, 57, '2025-05-04', '2025-05-25', '2025-05-27', 239.00),
(10, 167, '2025-07-01', '2025-07-05', '2025-07-10', 497.00),
(2, 10, '2025-10-20', '2025-11-05', '2025-11-09', 394.00),
(4, 61, '2025-10-22', '2025-10-27', '2025-11-02', 629.00),
(15, 95, '2025-06-28', '2025-07-12', '2025-07-18', 599.00),
(14, 168, '2025-10-18', '2025-11-14', '2025-11-16', 242.00),
(20, 105, '2025-09-12', '2025-09-14', '2025-09-18', 427.00),
(7, 114, '2025-11-05', '2025-11-13', '2025-11-18', 526.00),
(4, 176, '2025-08-16', '2025-09-03', '2025-09-07', 425.00),
(2, 102, '2025-08-12', '2025-08-19', '2025-08-23', 395.00),
(15, 24, '2025-06-04', '2025-06-25', '2025-06-28', 282.00),
(2, 86, '2025-05-19', '2025-05-24', '2025-05-27', 306.00),
(3, 196, '2025-10-08', '2025-10-15', '2025-10-21', 607.00),
(8, 85, '2025-09-13', '2025-10-09', '2025-10-12', 280.00),
(9, 38, '2025-04-18', '2025-05-06', '2025-05-09', 312.00),
(6, 29, '2025-04-14', '2025-04-19', '2025-04-21', 181.00),
(12, 61, '2025-05-02', '2025-05-13', '2025-05-19', 582.00),
(6, 68, '2025-05-25', '2025-05-30', '2025-06-01', 233.00),
(17, 30, '2025-11-14', '2025-11-30', '2025-12-02', 237.00),
(12, 132, '2025-05-29', '2025-06-02', '2025-06-08', 637.00),
(17, 57, '2025-09-09', '2025-09-11', '2025-09-17', 646.00),
(10, 118, '2025-11-16', '2025-11-18', '2025-11-20', 241.00),
(13, 110, '2025-04-09', '2025-04-25', '2025-04-27', 236.00),
(3, 21, '2025-08-08', '2025-08-28', '2025-09-01', 398.00),
(3, 33, '2025-08-07', '2025-08-27', '2025-08-31', 450.00),
(11, 98, '2025-11-01', '2025-11-18', '2025-11-24', 617.00),
(15, 130, '2025-09-15', '2025-09-29', '2025-10-05', 592.00),
(4, 168, '2025-09-29', '2025-10-23', '2025-10-29', 607.00),
(14, 116, '2025-06-23', '2025-07-07', '2025-07-10', 323.00),
(15, 103, '2025-10-08', '2025-11-01', '2025-11-06', 492.00),
(11, 110, '2025-03-14', '2025-04-05', '2025-04-09', 412.00),
(12, 40, '2025-05-12', '2025-05-15', '2025-05-20', 491.00),
(3, 24, '2025-10-22', '2025-10-26', '2025-10-31', 527.00),
(5, 143, '2025-06-24', '2025-07-13', '2025-07-15', 222.00),
(4, 106, '2025-11-07', '2025-12-05', '2025-12-09', 434.00),
(2, 74, '2025-08-01', '2025-08-11', '2025-08-17', 625.00),
(4, 148, '2025-05-07', '2025-05-14', '2025-05-20', 599.00),
(16, 58, '2025-07-11', '2025-07-23', '2025-07-25', 227.00),
(4, 196, '2025-08-28', '2025-09-16', '2025-09-20', 408.00),
(14, 144, '2025-05-12', '2025-06-01', '2025-06-07', 583.00),
(20, 169, '2025-09-23', '2025-09-24', '2025-09-28', 403.00);

-- Rentings Table
CREATE TABLE Rentings (
    renting_ID SERIAL PRIMARY KEY,
    employee_ID INT NOT NULL,
    customer_ID INT NOT NULL,
    room_ID INT NOT NULL,
    booking_ID INT UNIQUE,
    check_in_date DATE NOT NULL,
    check_out_date DATE NOT NULL,
    payment BOOLEAN NOT NULL,
    total_price DECIMAL(10,2) NOT NULL CHECK (total_price >= 0),
    CHECK (check_in_date <= check_out_date)
);

-- Insert into Rentings
INSERT INTO Rentings (employee_ID, customer_ID, room_ID, booking_ID, check_in_date, check_out_date, payment, total_price) VALUES
(76, 1, 120, NULL, '2025-06-09', '2025-06-12', TRUE, 289.00),
(115, 3, 113, NULL, '2025-11-23', '2025-11-28', TRUE, 516.00),
(136, 4, 139, NULL, '2025-06-02', '2025-06-07', TRUE, 544.00),
(132, 6, 26, NULL, '2025-08-04', '2025-08-08', TRUE, 437.00),
(24, 6, 106, NULL, '2025-10-07', '2025-10-10', TRUE, 335.00),
(96, 7, 69, NULL, '2025-05-14', '2025-05-19', TRUE, 544.00),
(17, 11, 7, NULL, '2025-04-27', '2025-05-03', TRUE, 638.00),
(37, 12, 143, NULL, '2025-05-19', '2025-05-25', TRUE, 610.00),
(100, 13, 74, NULL, '2025-07-12', '2025-07-18', TRUE, 582.00),
(47, 15, 49, NULL, '2025-06-18', '2025-06-23', TRUE, 541.00),
(95, 17, 115, NULL, '2025-09-23', '2025-09-27', TRUE, 395.00),
(111, 18, 22, NULL, '2025-08-10', '2025-08-15', TRUE, 490.00),
(140, 18, 54, NULL, '2025-04-09', '2025-04-15', TRUE, 603.00),
(43, 19, 14, NULL, '2025-06-29', '2025-07-05', TRUE, 634.00),
(18, 20, 105, NULL, '2025-06-28', '2025-06-30', TRUE, 196.00);

-- Archives Table  
CREATE TABLE Archives (
    archive_ID SERIAL PRIMARY KEY,
    renting_ID INT,
    booking_ID INT,
    customer_ID INT,
    total_price DECIMAL(10,2) NOT NULL CHECK (total_price >= 0),
    booking_date DATE,
    check_in_date DATE NOT NULL,
    check_out_date DATE NOT NULL,
    archive_date DATE NOT NULL
);

-- Insert into Archives
INSERT INTO Archives (renting_ID, booking_ID, customer_ID, total_price, booking_date, check_in_date, check_out_date, archive_date) VALUES
(NULL, NULL, 1, 249.00, '2024-07-11', '2024-07-16', '2024-07-18', '2024-07-27'),
(NULL, NULL, 2, 628.00, '2024-08-25', '2024-08-30', '2024-09-05', '2024-09-08'),
(NULL, NULL, 2, 303.00, '2024-04-20', '2024-04-25', '2024-04-28', '2024-05-01'),
(NULL, NULL, 2, 701.00, '2024-11-17', '2024-11-22', '2024-11-29', '2024-12-09'),
(NULL, NULL, 2, 685.00, '2024-08-31', '2024-09-05', '2024-09-12', '2024-09-20'),
(NULL, NULL, 3, 310.00, '2024-03-13', '2024-03-18', '2024-03-21', '2024-03-30'),
(NULL, NULL, 7, 290.00, '2024-05-15', '2024-05-20', '2024-05-23', '2024-05-30'),
(NULL, NULL, 9, 737.00, '2024-03-29', '2024-04-03', '2024-04-10', '2024-04-18'),
(NULL, NULL, 12, 380.00, '2024-02-14', '2024-02-19', '2024-02-23', '2024-03-01'),
(NULL, NULL, 12, 610.00, '2024-09-08', '2024-09-13', '2024-09-19', '2024-09-25'),
(NULL, NULL, 14, 393.00, '2024-06-08', '2024-06-13', '2024-06-17', '2024-06-21'),
(NULL, NULL, 14, 597.00, '2024-03-18', '2024-03-23', '2024-03-29', '2024-04-04'),
(NULL, NULL, 15, 338.00, '2024-09-28', '2024-10-03', '2024-10-06', '2024-10-08'),
(NULL, NULL, 15, 205.00, '2024-04-26', '2024-05-01', '2024-05-03', '2024-05-08'),
(NULL, NULL, 17, 536.00, '2024-02-11', '2024-02-16', '2024-02-21', '2024-02-28'),
(NULL, NULL, 17, 503.00, '2024-04-01', '2024-04-06', '2024-04-11', '2024-04-17'),
(NULL, NULL, 18, 393.00, '2024-08-11', '2024-08-16', '2024-08-20', '2024-08-26'),
(NULL, NULL, 19, 724.00, '2024-08-11', '2024-08-16', '2024-08-23', '2024-08-31'),
(NULL, NULL, 19, 525.00, '2024-03-21', '2024-03-26', '2024-03-31', '2024-04-01'),
(NULL, NULL, 20, 326.00, '2024-01-22', '2024-01-27', '2024-01-30', '2024-02-05');

/* Alters tables to connect the foreign keys */

-- Hotel references HotelChains and Employee (Manager)
ALTER TABLE Hotels
    ADD FOREIGN KEY (chain_ID) REFERENCES HotelChains(chain_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (manager_ID) REFERENCES Employees(employee_ID) ON DELETE SET NULL;

-- ChainPhone references HotelChains 
ALTER TABLE ChainPhones
    ADD FOREIGN KEY (chain_ID) REFERENCES HotelChains(chain_ID) ON DELETE CASCADE;

-- ChainEmail references HotelChains 
ALTER TABLE ChainEmails
    ADD FOREIGN KEY (chain_ID) REFERENCES HotelChains(chain_ID) ON DELETE CASCADE;

-- HotelPhone references HotelChains 
ALTER TABLE HotelPhones
    ADD FOREIGN KEY (hotel_ID) REFERENCES Hotels(hotel_ID) ON DELETE CASCADE;

-- HotelEmail references HotelChains 
ALTER TABLE HotelEmails
    ADD FOREIGN KEY (hotel_ID) REFERENCES Hotels(hotel_ID) ON DELETE CASCADE;

-- Employee references Hotel
ALTER TABLE Employees
    ADD FOREIGN KEY (hotel_ID) REFERENCES Hotels(hotel_ID) ON DELETE CASCADE;

-- Room references Hotel
ALTER TABLE Rooms
    ADD FOREIGN KEY (hotel_ID) REFERENCES Hotels(hotel_ID) ON DELETE CASCADE;

-- Room_Has_Amenities references Room and Amenities
ALTER TABLE Room_Has_Amenities
    ADD FOREIGN KEY (room_ID) REFERENCES Rooms(room_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (amenity_ID) REFERENCES Amenities(amenity_ID) ON DELETE CASCADE;

-- Bookings references Customer and Room
ALTER TABLE Bookings
    ADD FOREIGN KEY (customer_ID) REFERENCES Customers(customer_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (room_ID) REFERENCES Rooms(room_ID) ON DELETE CASCADE;

-- Rentings references Employee, Customer, Room, and Bookings
ALTER TABLE Rentings
    ADD FOREIGN KEY (employee_ID) REFERENCES Employees(employee_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (customer_ID) REFERENCES Customers(customer_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (room_ID) REFERENCES Rooms(room_ID) ON DELETE CASCADE,
    ADD FOREIGN KEY (booking_ID) REFERENCES Bookings(booking_ID) ON DELETE SET NULL;

-- Archive references Rentings and Bookings
ALTER TABLE Archives
    ADD FOREIGN KEY (renting_ID) REFERENCES Rentings(renting_ID) ON DELETE SET NULL,
    ADD FOREIGN KEY (booking_ID) REFERENCES Bookings(booking_ID) ON DELETE SET NULL,
    ADD FOREIGN KEY (customer_ID) REFERENCES Customers(customer_ID) ON DELETE SET NULL;

/* Views */
-- Create view for room search
CREATE VIEW RoomSearchView AS
SELECT 
    r.*,
    hc.chain_name,
    h.category,
    h.address,
    h.number_of_rooms as total_rooms,
    CASE 
        WHEN b.booking_ID IS NOT NULL OR rt.renting_ID IS NOT NULL THEN false
        ELSE true
    END as is_available,
    b.start_date as booking_start,
    b.end_date as booking_end,
    rt.check_in_date as renting_start,
    rt.check_out_date as renting_end
FROM Rooms r
JOIN Hotels h ON r.hotel_ID = h.hotel_ID
JOIN HotelChains hc ON h.chain_ID = hc.chain_ID
LEFT JOIN Bookings b ON r.room_ID = b.room_ID
LEFT JOIN Rentings rt ON r.room_ID = rt.room_ID;

-- Number of available rooms per area view
CREATE VIEW RoomsPerAreaView AS
SELECT 
    SUM(h.number_of_rooms),
    trim(split_part(h.address, ',', 2)) as area
FROM Hotels h
GROUP BY area;

-- Aggregated room capacity per hotel view
CREATE VIEW HotelCapacityView AS
SELECT 
    SUM(r.capacity)
FROM Rooms r
WHERE r.hotel_ID = 1;